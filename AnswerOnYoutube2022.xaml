<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1146,2282.4" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:uasc="clr-namespace:UiPath.Activities.System.Collections;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="31">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="44">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="770.4,2217.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Action Center&quot;,&quot;Advanced Tips&quot;,&quot;AI Center&quot;,&quot;API - HTTP Request&quot;,&quot;Beginers&quot;,&quot;Chatbot&quot;,&quot;DataTable&quot;,&quot;Document Understanding&quot;,&quot;Email&quot;,&quot;Excel&quot;,&quot;Exception&quot;,&quot;Files and Folders&quot;,&quot;JIRA&quot;,&quot;LINQ&quot;,&quot;List and Dictionary&quot;,&quot;Object Repository and MDE&quot;,&quot;Orchestrator Queues&quot;,&quot;PDF&quot;,&quot;Reframework&quot;,&quot;Salesforce activity&quot;,&quot;Salesforce REST API&quot;,&quot;SAP&quot;,&quot;ServiceNow activity&quot;,&quot;ServiceNow REST API&quot;,&quot;String and DateTime&quot;,&quot;Type of Processes&quot;,&quot;UiPath APPS&quot;,&quot;UiPath Assistant&quot;,&quot;UiPath Linux&quot;,&quot;UiPath Orchestrator&quot;,&quot;UiPath Studio Web&quot;,&quot;UiPath Studio X&quot;,&quot;Unattended Robot Modern Folder&quot;,&quot;Word and PPT&quot;,&quot;XML&quot;})]" Name="listC" />
      <Variable x:TypeArguments="scg:List(scg:List(x:String))" Default="[new List(of List(of String))]" Name="ListOfList" />
      <Variable x:TypeArguments="scg:List(scg:List(x:String))" Default="[new List(of List(of String))]" Name="ListOfYou" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="l1">
        <Variable.Default>
          <VisualBasicValue x:TypeArguments="scg:List(x:String)" ExpressionText="new List(of String)({&quot;3 ways to complete an External Tasks&quot;,&quot;A tour of our environment&quot;,&quot;Assigning tasks to users in code&quot;,&quot;Build an automation that completes a task in Action Center&quot;,&quot;Build an automation that creates a task in Action Center&quot;,&quot;Completing a Task in Action Center&quot;,&quot;Completing our first Task in Action Center&quot;,&quot;Designing a Form&quot;,&quot;Development Demo&quot;,&quot;Form Tasks vs. External Tasks&quot;,&quot;Orchestrator Mobile App&quot;,&quot;Publish automation to Orchestrator&quot;,&quot;Running the Task Completer automation&quot;,&quot;Running the automation from Orchestrator&quot;,&quot;Settings in Automation Cloud&quot;,&quot;Task Action (Task Results)&quot;,&quot;Task Catalogs&quot;,&quot;Waiting for a Form Task to complete&quot;,&quot;What is Action Center?&quot;})" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;MVXDQEVhWzA?t=142&quot;,&quot;MVXDQEVhWzA?t=195&quot;,&quot;U0GtNdxLDRc?t=351&quot;,&quot;MVXDQEVhWzA?t=745&quot;,&quot;MVXDQEVhWzA?t=235&quot;,&quot;BESSUT20Fdc?t=498&quot;,&quot;MVXDQEVhWzA?t=610&quot;,&quot;BESSUT20Fdc?t=276&quot;,&quot;BESSUT20Fdc?t=107&quot;,&quot;MVXDQEVhWzA?t=100&quot;,&quot;BESSUT20Fdc?t=544&quot;,&quot;MVXDQEVhWzA?t=525&quot;,&quot;MVXDQEVhWzA?t=864&quot;,&quot;MVXDQEVhWzA?t=594&quot;,&quot;BESSUT20Fdc?t=67&quot;,&quot;U0GtNdxLDRc?t=177&quot;,&quot;U0GtNdxLDRc?t=68&quot;,&quot;BESSUT20Fdc?t=390&quot;,&quot;BESSUT20Fdc?t=32&quot;})]" Name="y1" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="l2">
        <Variable.Default>
          <VisualBasicValue x:TypeArguments="scg:List(x:String)" ExpressionText="new List(of String)({&quot;Adding a simple dynamic value to our HTML&quot;,&quot;Adding dynamic table data to our HTML&quot;,&quot;Configuration of NetSuite SOAP API (Token ID and Secret)&quot;,&quot;Debugging - An Easy Guide&quot;,&quot;Demonstrate the CV click activity&quot;,&quot;Demonstrate the CV element exists activity&quot;,&quot;Demonstrate the CV get text activity&quot;,&quot;Demonstrate the CV type into activity&quot;,&quot;Dynamic SelectorÂ &quot;,&quot;Explaining PiP with example&quot;,&quot;Fast implementation time for UiPath Processes&quot;,&quot;From initial idea to implementation: The Business Case&quot;,&quot;From UiPath to Machine Learning&quot;,&quot;Get Running Processes&quot;,&quot;Get started with UiPath Cloud Robots - Serverless&quot;,&quot;Getting Started with UiPath Computer Vision&quot;,&quot;Git and Version Control in UiPath&quot;,&quot;How does Computer Vision actually work ?&quot;,&quot;How to build a reusable component using Libray&quot;,&quot;How To Capture All Screen Elements in One Click (Tutorial)&quot;,&quot;How to Connect to MSSQL Database and Run SQL Queries in UiPath&quot;,&quot;How to get started with UiPath Data Service&quot;,&quot;How to Implement Development Governance in UiPath&quot;,&quot;How to Implement Development Governance in UiPath&quot;,&quot;How to setup and use the Google Cloud Vision OCR with UiPath - Tutorial&quot;,&quot;How to Speed up the Ui automation inside UiPath Studio&quot;,&quot;How to use Dynamic Selectors&quot;,&quot;How to use Google Cloud Speech API powered by Machine Learning&quot;,&quot;How to use Personal Workspaces in UiPath&quot;,&quot;How to use the Anchor Base Activity in UiPath&quot;,&quot;How to use the Debug tools in UiPath Studio&quot;,&quot;Inject JS Script&quot;,&quot;Invoke Code - Tutorial&quot;,&quot;Invoke Method Activity| Full Tutorial for beginners&quot;,&quot;Invoke Power Shell Code&quot;,&quot;Invoke Python Script&quot;,&quot;Learn how to record exceptions in UiPath&quot;,&quot;Learn how to use Variables in Selectors&quot;,&quot;Matches and Regex&quot;,&quot;Pip - Changing the target session&quot;,&quot;RPA Lifecycle - Create PDD&quot;,&quot;RPA Lifecycle - Discovery Phase&quot;,&quot;RPA Lifecycle - Implementation&quot;,&quot;RPA Lifecycle - Testing&quot;,&quot;RPA vs INTEGRATION&quot;,&quot;Scrape Twitter and Do Sentiment Analysis&quot;,&quot;Set Text vs. Type Into activities&quot;,&quot;Setting a PiP options&quot;,&quot;SPEED UP your UiPath RPA AUTOMATIONS in TWO STEPS&quot;,&quot;Start any cmd Code with this General cmd command code&quot;,&quot;Start UiPath Process from CMD&quot;,&quot;The Create HTML Content activity basics&quot;,&quot;The journey from an initial idea to implementation&quot;,&quot;Tip #1: Consider Architecture Design&quot;,&quot;Tip #10: Triggers in Orchestrator&quot;,&quot;Tip #2: Use Background Processes&quot;,&quot;Tip #3: Avoid the Delay activity&quot;,&quot;Tip #4: Use Simulate type / click&quot;,&quot;Tip #5: Consider the Parallel activity&quot;,&quot;Tip #6: Use the faster activities&quot;,&quot;Tip #7: Stick to the Classic Selectors&quot;,&quot;Tip #8: Use APIs&quot;,&quot;Tip #9: Consider the VM resources&quot;,&quot;Ui Explorer - Tips and tricks&quot;,&quot;UiPath Automation Ops - Preview&quot;,&quot;UiPath continue on error simple example&quot;,&quot;UiPath RPA Mainframe Automation with Hostbridge&quot;,&quot;UiPath selectors full tutorial&quot;,&quot;Using the Data Scraping wizard in UiPath Studio&quot;,&quot;Using the Table Extraction wizard in UiPath Studio&quot;,&quot;Using UiPath to sort digital photos&quot;,&quot;What is Workflow Analyzer?&quot;,&quot;Why is important to have SPEED inside of the UI AUTOMATION?&quot;,&quot;Workflow Analyzer - Export to Excel function&quot;,&quot;Workflow Analyzer - Looking at Analyzer output&quot;,&quot;Workflow Analyzer settings and rules examples&quot;})" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;W5r9MkI-P7g?t=179&quot;,&quot;W5r9MkI-P7g?t=305&quot;,&quot;9cv_dFC0xt4?t=0&quot;,&quot;2eIcXXebOtE?t=0&quot;,&quot;hIUxPqEu_uo?t=646&quot;,&quot;hIUxPqEu_uo?t=798&quot;,&quot;hIUxPqEu_uo?t=264&quot;,&quot;hIUxPqEu_uo?t=1030&quot;,&quot;oko4ssbBC9E?t=0&quot;,&quot;k57e9aV4LaE?t=20&quot;,&quot;22HdDZE5C0c?t=0&quot;,&quot;S4AwjbM7utU?t=0&quot;,&quot;pCIzjHzmgZU?t=0&quot;,&quot;Eg5b7rOtu5U?t=0&quot;,&quot;uaUPzcrYL-U?t=0&quot;,&quot;wjK870yhtqE?t=0&quot;,&quot;ZCABZgBmjtM?t=0&quot;,&quot;hIUxPqEu_uo?t=57&quot;,&quot;bcwX3NGqmNQ?t=0&quot;,&quot;DTyNz8gzjM0?t=0&quot;,&quot;yXKI8IzUnDY?t=0&quot;,&quot;Ou4HM9zC0tE?t=0&quot;,&quot;4Shxzk_7zlw?t=0&quot;,&quot;4Shxzk_7zlw?t=0&quot;,&quot;cld-An4u_I8?t=0&quot;,&quot;EImxMZtuX44?t=0&quot;,&quot;gkmjZusQyqk?t=0&quot;,&quot;qG35vVwU5fE?t=0&quot;,&quot;E-a4iz-iM-k?t=0&quot;,&quot;BZFG_BL_sd4?t=0&quot;,&quot;ZKAA9q8aSgU?t=0&quot;,&quot;fJIdITjYx6Y?t=0&quot;,&quot;w_zbqDme2X8?t=0&quot;,&quot;mq6QSywBGmE?t=0&quot;,&quot;wKZu86GzHOo?t=0&quot;,&quot;7sZqsK5kTLQ?t=0&quot;,&quot;z_BIVJgBmjk?t=0&quot;,&quot;Mos-ZTysjz8?t=0&quot;,&quot;VVRdjAbhVLU?t=0&quot;,&quot;k57e9aV4LaE?t=383&quot;,&quot;3u-sv50an6g?t=77&quot;,&quot;3u-sv50an6g?t=25&quot;,&quot;3u-sv50an6g?t=142&quot;,&quot;3u-sv50an6g?t=206&quot;,&quot;qAzyAABd8Rk?t=0&quot;,&quot;HKxrAPxn5jA?t=0&quot;,&quot;HDSmRvyO_mo?t=0&quot;,&quot;k57e9aV4LaE?t=295&quot;,&quot;vOABUc844lE?t=0&quot;,&quot;W6T0JUfwYe4?t=0&quot;,&quot;K_uX3JeKUMU?t=0&quot;,&quot;W5r9MkI-P7g?t=28&quot;,&quot;DatWp82u7so?t=0&quot;,&quot;yh3rhuyTxxU?t=140&quot;,&quot;yh3rhuyTxxU?t=514&quot;,&quot;yh3rhuyTxxU?t=198&quot;,&quot;yh3rhuyTxxU?t=234&quot;,&quot;yh3rhuyTxxU?t=304&quot;,&quot;yh3rhuyTxxU?t=342&quot;,&quot;yh3rhuyTxxU?t=367&quot;,&quot;yh3rhuyTxxU?t=397&quot;,&quot;yh3rhuyTxxU?t=442&quot;,&quot;yh3rhuyTxxU?t=483&quot;,&quot;BNg96YB1MM8?t=0&quot;,&quot;qhDdjQ-oj1E?t=0&quot;,&quot;bJE5yjmyH7Q?t=0&quot;,&quot;WUk47sgOlYo?t=0&quot;,&quot;Lz0Bx_q_hCw?t=0&quot;,&quot;Ty2TiClUm6Q?t=90&quot;,&quot;Ty2TiClUm6Q?t=390&quot;,&quot;Ij1Kovm6ijY?t=0&quot;,&quot;V7719qbuHsM?t=28&quot;,&quot;iggtx-j7Tkw?t=0&quot;,&quot;V7719qbuHsM?t=417&quot;,&quot;V7719qbuHsM?t=283&quot;,&quot;V7719qbuHsM?t=100&quot;})]" Name="y2" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Activating AiFabric in the UiPath Platform&quot;,&quot;Adding a model/package&quot;,&quot;Adding a Training dataset&quot;,&quot;Adding an Evaluation dataset&quot;,&quot;Creating a Pipeline for training&quot;,&quot;Creating a project&quot;,&quot;Machine Learning concepts&quot;})]" Name="l3" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;d7HoikidKPU?t=217&quot;,&quot;d7HoikidKPU?t=295&quot;,&quot;d7HoikidKPU?t=366&quot;,&quot;d7HoikidKPU?t=508&quot;,&quot;d7HoikidKPU?t=435&quot;,&quot;d7HoikidKPU?t=270&quot;,&quot;d7HoikidKPU?t=22&quot;})]" Name="y3" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;API Documentation&quot;,&quot;API Example in UiPath&quot;,&quot;API Kinds&quot;,&quot;API Types&quot;,&quot;Burger Example&quot;,&quot;Create a JSON with a List of Strings inside&quot;,&quot;Create a JSON with an Object inside&quot;,&quot;Create a JSON with Array inside&quot;,&quot;Create a simple JSON&quot;,&quot;Create JSON in UiPath Studio using VB.NET&quot;,&quot;Datatable to JSON&quot;,&quot;Deserialize a JSON with a List of Strings inside&quot;,&quot;Deserialize a JSON with an Object inside&quot;,&quot;Deserialize a JSON with Array inside&quot;,&quot;Deserialize JSON in UiPath&quot;,&quot;Deserialize simple JSON&quot;,&quot;Dynamic HTTP Request&quot;,&quot;Forms - Files and radio buttons&quot;,&quot;Forms - Panels, multi-select, tables, and buttons&quot;,&quot;Forms - Simple use-case with 2 drop-down list&quot;,&quot;Forms - Survey use-case&quot;,&quot;Forms - The basic inputs for text, numbers, dates, email, phone...&quot;,&quot;Forms - Use-case with multiple select insides of a drop-down list&quot;,&quot;Google Maps API&quot;,&quot;How to convert a DataTable to a JSON string in UiPath&quot;,&quot;How to do API calls and JSON parsing with RegEx&quot;,&quot;How Web Works?&quot;,&quot;HTTP Request Parameters&quot;,&quot;HTTP Request Wizard&quot;,&quot;HTTP Response Status&quot;,&quot;JSON to Datatable&quot;,&quot;OpenWeather API&quot;,&quot;POST Example&quot;,&quot;Request Methods&quot;,&quot;REST-API&quot;,&quot;SelectToken with LINQ&quot;,&quot;Spotify API&quot;,&quot;Summary&quot;,&quot;UiPath API Package&quot;,&quot;UiPath extracts Datatable from a complex JSON file&quot;,&quot;uipath http request make the same configuration like in postman &quot;,&quot;UiPath Http Request Upload file with Multipart form-data&quot;,&quot;UiPath send data to PagerDuty&quot;,&quot;URI | URL | URN&quot;,&quot;URL Segment&quot;,&quot;When we use Deserialize JSON Array activity&quot;,&quot;Wrike configuration for REST API&quot;})]" Name="l4" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;iZiwhhniDl0?t=2114&quot;,&quot;iZiwhhniDl0?t=1366&quot;,&quot;iZiwhhniDl0?t=2024&quot;,&quot;iZiwhhniDl0?t=2054&quot;,&quot;iZiwhhniDl0?t=108&quot;,&quot;AH_4CxljnME?t=845&quot;,&quot;AH_4CxljnME?t=665&quot;,&quot;AH_4CxljnME?t=737&quot;,&quot;AH_4CxljnME?t=585&quot;,&quot;cojORhYrBsQ?t=0&quot;,&quot;AH_4CxljnME?t=955&quot;,&quot;AH_4CxljnME?t=420&quot;,&quot;AH_4CxljnME?t=170&quot;,&quot;AH_4CxljnME?t=235&quot;,&quot;Tn5X-7kxzhs?t=0&quot;,&quot;AH_4CxljnME?t=95&quot;,&quot;HiS_lQ1wbD4?t=826&quot;,&quot;2A2fl0gGQhk?t=1850&quot;,&quot;2A2fl0gGQhk?t=895&quot;,&quot;2A2fl0gGQhk?t=255&quot;,&quot;2A2fl0gGQhk?t=1690&quot;,&quot;2A2fl0gGQhk?t=1155&quot;,&quot;2A2fl0gGQhk?t=610&quot;,&quot;iZiwhhniDl0?t=1100&quot;,&quot;_lsQ5tvucDU?t=0&quot;,&quot;ymne7wPzjFc?t=0&quot;,&quot;iZiwhhniDl0?t=267&quot;,&quot;iZiwhhniDl0?t=1582&quot;,&quot;iZiwhhniDl0?t=1229&quot;,&quot;iZiwhhniDl0?t=756&quot;,&quot;AH_4CxljnME?t=1070&quot;,&quot;iZiwhhniDl0?t=1013&quot;,&quot;iZiwhhniDl0?t=637&quot;,&quot;iZiwhhniDl0?t=483&quot;,&quot;iZiwhhniDl0?t=842&quot;,&quot;HiS_lQ1wbD4?t=502&quot;,&quot;iZiwhhniDl0?t=1143&quot;,&quot;iZiwhhniDl0?t=694&quot;,&quot;iZiwhhniDl0?t=1182&quot;,&quot;fFXvWco5nDw?t=0&quot;,&quot;Zzk9D5COFk0?t=0&quot;,&quot;G0j6dE0VLks?t=0&quot;,&quot;Acteqbk1Qx8?t=0&quot;,&quot;iZiwhhniDl0?t=287&quot;,&quot;iZiwhhniDl0?t=1652&quot;,&quot;AH_4CxljnME?t=360&quot;,&quot;gYFx395vS-k?t=0&quot;})]" Name="y4" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Applications and Selectors&quot;,&quot;Arguments (IN)&quot;,&quot;Arguments (IN/OUT)&quot;,&quot;Arguments (OUT)&quot;,&quot;Browser Automation&quot;,&quot;Differences between Variables and Arguments&quot;,&quot;Excel and Data Tables&quot;,&quot;File Handling&quot;,&quot;How to do Web Scraping with UiPath - Use Case&quot;,&quot;If/While&quot;,&quot;Install UiPath and connect to Orchestrator&quot;,&quot;Invoke Workflow File&quot;,&quot;Invoke Workflow File | Full tutorial&quot;,&quot;Our first UiPath Robot&quot;,&quot;Regex in UiPath simple presentation&quot;,&quot;Screen Scraping with Get Text&quot;,&quot;Sequence and Flowchart&quot;,&quot;Simple Use Case - Add Customers to CRM&quot;,&quot;Simple Use Case - Create Financial Transactions&quot;,&quot;Simple Use Case - Mortgage Applications&quot;,&quot;Start UiPath&quot;,&quot;UiPath Basics - Browser Automation&quot;,&quot;UiPath Browser Automation Tutorial (The Basics for Beginners)&quot;,&quot;UiPath Studio and Project Settings&quot;,&quot;Universal Search in UiPath Studio&quot;,&quot;Variables&quot;,&quot;Variables | Arguments | Workflows (Europe Map)&quot;,&quot;Web/Data Scraping to Excel&quot;,&quot;Workflow Layout&quot;,&quot;Workflows&quot;})]" Name="l5" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;sp5ZwFKfh-0?t=4026&quot;,&quot;4vLEVz_xzAA?t=1025&quot;,&quot;4vLEVz_xzAA?t=1438&quot;,&quot;4vLEVz_xzAA?t=1263&quot;,&quot;sp5ZwFKfh-0?t=4747&quot;,&quot;4vLEVz_xzAA?t=1717&quot;,&quot;sp5ZwFKfh-0?t=3208&quot;,&quot;sp5ZwFKfh-0?t=5522&quot;,&quot;jDKo4sax0SY?t=0&quot;,&quot;sp5ZwFKfh-0?t=2430&quot;,&quot;sp5ZwFKfh-0?t=68&quot;,&quot;4vLEVz_xzAA?t=695&quot;,&quot;ljVuS0IJub0?t=0&quot;,&quot;sp5ZwFKfh-0?t=238&quot;,&quot;mesRfWjNycQ?t=0&quot;,&quot;MdNVjWWkD98?t=0&quot;,&quot;NzamfhBthao?t=0&quot;,&quot;EWDxInPQzT0?t=65&quot;,&quot;EWDxInPQzT0?t=1635&quot;,&quot;EWDxInPQzT0?t=635&quot;,&quot;sp5ZwFKfh-0?t=215&quot;,&quot;KSQBJbUoZ-M?t=0&quot;,&quot;Qcm1PhPJWuE?t=0&quot;,&quot;Yig4uDzhwFo?t=0&quot;,&quot;fyOFGe_wxHU?t=0&quot;,&quot;sp5ZwFKfh-0?t=1344&quot;,&quot;4vLEVz_xzAA?t=785&quot;,&quot;sp5ZwFKfh-0?t=6235&quot;,&quot;4vLEVz_xzAA?t=569&quot;,&quot;4vLEVz_xzAA?t=462&quot;})]" Name="y5" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Complex Use Cases with MS Teams Chatbot&quot;,&quot;Configuration with Orchestrator&quot;,&quot;Console Cloud configuration&quot;,&quot;DialogFlow basic config&quot;,&quot;DialogFlow Configuration&quot;,&quot;DialogFlow extract variables and test this logic&quot;,&quot;How to move variables between Intents&quot;,&quot;How to send SMS from anÂ #UiPathÂ Robot usingÂ #SMSLink.ro&quot;,&quot;Mapping variables with UiPath Process&quot;,&quot;Microsoft Teams trigger UiPath Robots (Chatbot)&quot;,&quot;MS Teams - UiPath Orchestrator send text to MS Teams via Webhooks&quot;,&quot;MS Teams - UiPath send text to MS Teams very fast via Webhooks&quot;,&quot;MS Teams - UiPath sends a local image to MS Teams via WebHook (Base64)&quot;,&quot;MS Teams Chatbot analyzes and answers to multiple direct messages&quot;,&quot;Send SMS from UiPath | sendSMS.ro&quot;,&quot;Simple Chatbot MS Teams create in UiPath Studio&quot;,&quot;Slack - send images to Slack from UiPath Studio via webhooks&quot;,&quot;Slack - UiPath Orchestrator send text to Slack via Webhooks&quot;,&quot;Slack - UiPath send text to Slack very fast via Webhooks&quot;,&quot;Slack trigger UiPath Robots (NodeJS)&quot;})]" Name="l6" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;udnQoQCaw-0?t=0&quot;,&quot;RMDNU5Oa_W4?t=210&quot;,&quot;RMDNU5Oa_W4?t=395&quot;,&quot;RMDNU5Oa_W4?t=690&quot;,&quot;RMDNU5Oa_W4?t=330&quot;,&quot;RMDNU5Oa_W4?t=860&quot;,&quot;RMDNU5Oa_W4?t=1620&quot;,&quot;OpdT07Zn1uY?t=0&quot;,&quot;RMDNU5Oa_W4?t=1280&quot;,&quot;2ud8K2a4fq8?t=0&quot;,&quot;gcHRFcUJxio?t=0&quot;,&quot;fGbZF9MrHpQ?t=0&quot;,&quot;Q8h-WuJ9nls?t=0&quot;,&quot;mZyaUEpAs70?t=0&quot;,&quot;Lbry0mxtSUs?t=0&quot;,&quot;le5lAmNoCkk?t=0&quot;,&quot;j8PcXnmttLA?t=0&quot;,&quot;QJ6IMFyzYl4?t=0&quot;,&quot;8bB7O4nqENE?t=0&quot;,&quot;B17pGNJugLs?t=0&quot;})]" Name="y6" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Access individual elements&quot;,&quot;Add Data Column&quot;,&quot;Add Data Row&quot;,&quot;Build Data Table&quot;,&quot;Check if DataTable is Empty&quot;,&quot;Clear Data Table&quot;,&quot;Clone DataTable&quot;,&quot;Compare Two DataTables using LINQ Query&quot;,&quot;Convert DataTable To Dictionary&quot;,&quot;Example - Filter DT using Date&quot;,&quot;Example - Filter DT using multiple columns (AND/OR)&quot;,&quot;Example - Filter DT using number condition&quot;,&quot;Example - Filter DT using String&quot;,&quot;Except Function&quot;,&quot;Filter data for multiple fake spaces before Generate DataTable&quot;,&quot;Filter Data Table&quot;,&quot;Filter data with multiple spaces inside of column&quot;,&quot;For Each Row&quot;,&quot;Generate Data Table&quot;,&quot;Get Duplicate Rows&quot;,&quot;Get Row Item&quot;,&quot;Get Unique Rows&quot;,&quot;How to Split a Datatable in UiPath&quot;,&quot;Intersect Function&quot;,&quot;Join Data Tables&quot;,&quot;Lookup Data Table&quot;,&quot;Merge Data Table&quot;,&quot;Output Data Table&quot;,&quot;Print data from DataTable&quot;,&quot;Read DataTable from Excel&quot;,&quot;Remove Data Column&quot;,&quot;Remove Data Row&quot;,&quot;Remove Duplicate Rows&quot;,&quot;Sort Data Table&quot;,&quot;Transpose DataTable using LINQ query&quot;,&quot;Union Function&quot;,&quot;Update value in DataTable&quot;,&quot;What is a Data Table?&quot;})]" Name="l7" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;PydU5WPeaVo?t=260&quot;,&quot;T9FAg__-Gd4?t=388&quot;,&quot;T9FAg__-Gd4?t=316&quot;,&quot;T9FAg__-Gd4?t=85&quot;,&quot;PydU5WPeaVo?t=888&quot;,&quot;T9FAg__-Gd4?t=1595&quot;,&quot;PydU5WPeaVo?t=710&quot;,&quot;K5da3tNwGB4?t=0&quot;,&quot;1rgC2iuAed4?t=0&quot;,&quot;QGjlSeEVmws?t=1270&quot;,&quot;QGjlSeEVmws?t=647&quot;,&quot;QGjlSeEVmws?t=1197&quot;,&quot;QGjlSeEVmws?t=288&quot;,&quot;Z6AewjSuC1Y?t=299&quot;,&quot;PydU5WPeaVo?t=1980&quot;,&quot;T9FAg__-Gd4?t=674&quot;,&quot;PydU5WPeaVo?t=2300&quot;,&quot;T9FAg__-Gd4?t=186&quot;,&quot;T9FAg__-Gd4?t=916&quot;,&quot;kMMYEOkq39w?t=850&quot;,&quot;T9FAg__-Gd4?t=1380&quot;,&quot;kMMYEOkq39w?t=120&quot;,&quot;LyCv8h0hrsk?t=0&quot;,&quot;Z6AewjSuC1Y?t=69&quot;,&quot;T9FAg__-Gd4?t=1118&quot;,&quot;T9FAg__-Gd4?t=1250&quot;,&quot;T9FAg__-Gd4?t=755&quot;,&quot;T9FAg__-Gd4?t=1542&quot;,&quot;PydU5WPeaVo?t=108&quot;,&quot;PydU5WPeaVo?t=85&quot;,&quot;T9FAg__-Gd4?t=1217&quot;,&quot;T9FAg__-Gd4?t=1485&quot;,&quot;T9FAg__-Gd4?t=865&quot;,&quot;T9FAg__-Gd4?t=592&quot;,&quot;CGVSR6HwNAI?t=0&quot;,&quot;Z6AewjSuC1Y?t=366&quot;,&quot;PydU5WPeaVo?t=530&quot;,&quot;T9FAg__-Gd4?t=45&quot;})]" Name="y7" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Brief explanation of Document Understanding phases&quot;,&quot;Classification&quot;,&quot;Create loop for each document&quot;,&quot;Data Extraction Scope&quot;,&quot;Digitize document&quot;,&quot;Export extraction to Excel&quot;,&quot;Form extractor&quot;,&quot;How to Setup and Use UiPath Forms AIÂ &quot;,&quot;Invoce Case - Classify Document Scope&quot;,&quot;Invoce Case - Data Extraction Scope&quot;,&quot;Invoce Case - Export Extraction Results&quot;,&quot;Invoce Case - Load Taxonomy&quot;,&quot;Invoce Case - Present Validation Station&quot;,&quot;Invoce Case - Read our invoice&quot;,&quot;Invoce Case - Scale the solution&quot;,&quot;Invoce Case - Specify the OCR Engine&quot;,&quot;Machine Learning extractor&quot;,&quot;Packages installation&quot;,&quot;PDF Table - Build DataTable for output data&quot;,&quot;PDF Table - Data Extraction Scope&quot;,&quot;PDF Table - Digitize Document&quot;,&quot;PDF Table - Export Extraction Results&quot;,&quot;PDF Table - Extract multiple PDF files&quot;,&quot;PDF Table - Iterate through our output and add data&quot;,&quot;PDF Table - Load Taxonomy&quot;,&quot;PDF Table - Merge Data Table&quot;,&quot;PDF Table - Understand the output data&quot;,&quot;PDF Table - Write the extracted to Excel&quot;,&quot;Taxonomy&quot;})]" Name="l8" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;d4qt5UvlZdM?t=48&quot;,&quot;d4qt5UvlZdM?t=1050&quot;,&quot;d4qt5UvlZdM?t=647&quot;,&quot;d4qt5UvlZdM?t=1539&quot;,&quot;d4qt5UvlZdM?t=723&quot;,&quot;d4qt5UvlZdM?t=2333&quot;,&quot;d4qt5UvlZdM?t=1710&quot;,&quot;9wkV9_iBcQE?t=0&quot;,&quot;cp1hbChzUQ4?t=388&quot;,&quot;cp1hbChzUQ4?t=584&quot;,&quot;cp1hbChzUQ4?t=845&quot;,&quot;cp1hbChzUQ4?t=130&quot;,&quot;cp1hbChzUQ4?t=778&quot;,&quot;cp1hbChzUQ4?t=276&quot;,&quot;cp1hbChzUQ4?t=1063&quot;,&quot;cp1hbChzUQ4?t=372&quot;,&quot;d4qt5UvlZdM?t=1950&quot;,&quot;d4qt5UvlZdM?t=131&quot;,&quot;WPKEJLW7_Js?t=962&quot;,&quot;WPKEJLW7_Js?t=413&quot;,&quot;WPKEJLW7_Js?t=317&quot;,&quot;WPKEJLW7_Js?t=803&quot;,&quot;WPKEJLW7_Js?t=1226&quot;,&quot;WPKEJLW7_Js?t=1074&quot;,&quot;WPKEJLW7_Js?t=145&quot;,&quot;WPKEJLW7_Js?t=1028&quot;,&quot;WPKEJLW7_Js?t=830&quot;,&quot;WPKEJLW7_Js?t=1142&quot;,&quot;d4qt5UvlZdM?t=233&quot;})]" Name="y8" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Gmail - Filters for emails&quot;,&quot;Gmail - Google script add data on Orchestrator Queue and start UiPath process&quot;,&quot;Gmail - Read Emails and Send Emails&quot;,&quot;Gmail - Trigger for Orchestrator&quot;,&quot;Gmail configuration for UiPath email automation&quot;,&quot;Gmail configuration inside settings&quot;,&quot;Gmail trigger UiPath Robots&quot;,&quot;Google Script start UiPath Robots&quot;,&quot;How to add a variable number of attachments to your email&quot;,&quot;How to attach multiple files to an Outlook mail in Uipath&quot;,&quot;How to Download Attachments from Outlook and save them dynamically&quot;,&quot;How to filter emails in Get Outlook Mail Messages - Full Tutorial&quot;,&quot;How to filter Outlook messages by sender email address&quot;,&quot;How to Forward Outlook Mails&quot;,&quot;How to send Attachments with Outlook&quot;,&quot;How to trigger a process, when a mail arrives&quot;,&quot;OutLook - Create a Dynamic Regex solution in UiPath&quot;,&quot;OutLook - Extract data out of the email body with Regex&quot;,&quot;Outlook - Filters for emails&quot;,&quot;OutLook - Move the processed emails&quot;,&quot;Outlook - Read Emails and Send Emails&quot;,&quot;Outlook - Task Scheduler from Windows&quot;,&quot;Outlook - Trigger the process from Orchestrator&quot;,&quot;Outlook trigger UiPath Robot from VBA code&quot;,&quot;Start UiPath Robot from Outlook&quot;})]" Name="l9" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Y5gNBIZWEDs?t=630&quot;,&quot;Y5gNBIZWEDs?t=1410&quot;,&quot;Y5gNBIZWEDs?t=170&quot;,&quot;Y5gNBIZWEDs?t=1060&quot;,&quot;iIPFpe127JM?t=0&quot;,&quot;Y5gNBIZWEDs?t=60&quot;,&quot;rucv0ifiL5U?t=0&quot;,&quot;WI6k9dZoFoM?t=0&quot;,&quot;bZXSseMuWzM?t=0&quot;,&quot;0mleL0_U9Zc?t=0&quot;,&quot;EYZpM0g67JE?t=0&quot;,&quot;EizZPhhBLCQ?t=0&quot;,&quot;RSbzvdglpOM?t=0&quot;,&quot;AAG7WWNkyuM?t=0&quot;,&quot;4x-sc-1TKzI?t=0&quot;,&quot;Hlaaarbc8j8?t=0&quot;,&quot;AV59DqhJa38?t=1455&quot;,&quot;AV59DqhJa38?t=870&quot;,&quot;3NUATZn7yM0?t=465&quot;,&quot;AV59DqhJa38?t=1937&quot;,&quot;3NUATZn7yM0?t=80&quot;,&quot;3NUATZn7yM0?t=980&quot;,&quot;3NUATZn7yM0?t=755&quot;,&quot;2KaRjaEpecI?t=0&quot;,&quot;mmZV32wjkQA?t=0&quot;})]" Name="y9" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Adjust Column Width&quot;,&quot;Color Code Excel Cells with Conditional Formatting&quot;,&quot;Compare Two Sheets&quot;,&quot;Convert Data Table to HTML String&quot;,&quot;Convert Text File to CSV File&quot;,&quot;Copy only rows that contain a specific string to a new table&quot;,&quot;Copy Range and Auto Fill Range&quot;,&quot;Count the repetition of string inside excel table&quot;,&quot;create a complex PivotTable in Excel using VBA code&quot;,&quot;Create Table and Pivot Table, also Refresh Pivot Table&quot;,&quot;Data Scraping to Excel&quot;,&quot;Delete Column from Table&quot;,&quot;Delete Excel Sheet&quot;,&quot;Delete Rows and Columns&quot;,&quot;Enable Excel Macro Settings&quot;,&quot;Excel Application scope and Read and Write Range&quot;,&quot;Excel trigger UiPath Robots&quot;,&quot;Execute Macro&quot;,&quot;Extract emails from Yahoo Mail and write this data in Excel&quot;,&quot;Extract table from a web site and write this data in Excel&quot;,&quot;filter rows from Excel based on a particular string contains&quot;,&quot;Format Numbers In Excel Column&quot;,&quot;Get Cell Color and Set Range Color&quot;,&quot;Get DataTable Columns&quot;,&quot;Get Excel Sheet Name&quot;,&quot;Get Excel Sheets Count&quot;,&quot;Get Selected Range, Append Range, Delete Range and Select Range&quot;,&quot;Get Workbook Sheet and Get Workbook Sheets&quot;,&quot;How to add data to a new Excel column&quot;,&quot;How to Check for an Expired Date in Excel&quot;,&quot;How to compare Excel columns with numbers&quot;,&quot;How to compare times from Excel&quot;,&quot;How to compare two dates in Excel (with .net)&quot;,&quot;How to compare two Excel sheets and update cells&quot;,&quot;How to do Real Time Currency Conversion&quot;,&quot;How to handle large CSV files in UiPath (ODBC database)&quot;,&quot;How to merge columns from different DataTables&quot;,&quot;How to Read Excel Data, do an Online Search and write the result in the next Column&quot;,&quot;How to remove duplicate rows in Excel&quot;,&quot;How to save Outlook Mails to Excel&quot;,&quot;How to send Hotkeys to specific Excel CellsÂ &quot;,&quot;Insert Column in Table and Filter Table&quot;,&quot;Insert column or row in Excel at specific location&quot;,&quot;Insert Rows and Columns&quot;,&quot;Invoke VBA&quot;,&quot;Invoke VBA Properties&quot;,&quot;Invoke VBA Vs. Execute Macro&quot;,&quot;LookUp Range&quot;,&quot;Loop through Rows and Columns in Excel&quot;,&quot;Macro Example (2 Parameters + MacroOutput)&quot;,&quot;Macro Example (2 Parameters)&quot;,&quot;Macro Properties&quot;,&quot;Macro Structure&quot;,&quot;Read Cell, Formula, Row and Column and Write Cell&quot;,&quot;Read Data from Excel search on Google and write back the data in Excel&quot;,&quot;Read, Write and Append CSV&quot;,&quot;Remove Duplicate Range&quot;,&quot;Remove Empty Rows From DataTable&quot;,&quot;Rename Column in Data Table&quot;,&quot;Rename Excel Sheet&quot;,&quot;Reverse DataTable&quot;,&quot;Some more subtle differences between the Excel and Workbook Read Range activities&quot;,&quot;Sort DataTable and Get Table Range&quot;,&quot;Sort Excel Sheets&quot;,&quot;Sub Vs. Function&quot;,&quot;The Excel Read Range Activity overview&quot;,&quot;The Workbook Read Range Activity overview&quot;,&quot;Transpose DataTable&quot;,&quot;UiPath Filter and Merge Datatable with RAW commands faster approach&quot;,&quot;VBA Code Structure&quot;,&quot;When to use the Excel Read Range&quot;,&quot;When to use the Workbook Read Range&quot;,&quot;Workbook Append Range&quot;,&quot;Workbook Get Table Range&quot;,&quot;Workbook Read and Write Range&quot;,&quot;Workbook Read Cell, Formula, Row and Column&quot;,&quot;Workbook Write Cell&quot;,&quot;write formula to Excel VLOOKUP | SUM&quot;})]" Name="l10" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;BxJNTFWBVso?t=0&quot;,&quot;xFq_cTt-9BM?t=0&quot;,&quot;Z6AewjSuC1Y?t=411&quot;,&quot;SAGwH3nM4co?t=0&quot;,&quot;RyVUSn8JJpQ?t=0&quot;,&quot;rcqplwMywFY?t=955&quot;,&quot;aHOEsHDFZCo?t=2035&quot;,&quot;rcqplwMywFY?t=565&quot;,&quot;JtqxVNxdTFY?t=0&quot;,&quot;aHOEsHDFZCo?t=1760&quot;,&quot;kOPfG44-CBw?t=0&quot;,&quot;aHOEsHDFZCo?t=1615&quot;,&quot;4C5NAgB__cI?t=0&quot;,&quot;aHOEsHDFZCo?t=2010&quot;,&quot;wFIEKbcV0CI?t=392&quot;,&quot;aHOEsHDFZCo?t=80&quot;,&quot;aVSsFnI0fIo?t=0&quot;,&quot;aHOEsHDFZCo?t=2470&quot;,&quot;rcqplwMywFY?t=160&quot;,&quot;rcqplwMywFY?t=42&quot;,&quot;dQBO4E_W18I?t=0&quot;,&quot;BLwwoSPamhk?t=0&quot;,&quot;aHOEsHDFZCo?t=1390&quot;,&quot;0lFPDDc5Eak?t=0&quot;,&quot;8ho270OZHB4?t=0&quot;,&quot;rILZcpDj320?t=0&quot;,&quot;aHOEsHDFZCo?t=1105&quot;,&quot;aHOEsHDFZCo?t=1280&quot;,&quot;DTKyWrgDDDg?t=0&quot;,&quot;nJJQ-1i5QSc?t=0&quot;,&quot;8K8BYDySQ18?t=0&quot;,&quot;g1hoBnOFvbA?t=0&quot;,&quot;em7JWkTZOwM?t=0&quot;,&quot;LAWn9Sz8fac?t=0&quot;,&quot;j_bMat4ZSts?t=0&quot;,&quot;2hkf4_DbDR0?t=0&quot;,&quot;M2YJ3Z03oag?t=0&quot;,&quot;9HxtyuAiPTk?t=0&quot;,&quot;DfsyF80ro1M?t=0&quot;,&quot;zy_pjivxDGM?t=0&quot;,&quot;sg0Upw4ssBg?t=0&quot;,&quot;aHOEsHDFZCo?t=1650&quot;,&quot;59wOd7lrlhI?t=0&quot;,&quot;aHOEsHDFZCo?t=1925&quot;,&quot;aHOEsHDFZCo?t=2610&quot;,&quot;wFIEKbcV0CI?t=192&quot;,&quot;wFIEKbcV0CI?t=47&quot;,&quot;aHOEsHDFZCo?t=2185&quot;,&quot;t6WTt5EHLpQ?t=0&quot;,&quot;iPnOo9GWu4U?t=722&quot;,&quot;iPnOo9GWu4U?t=553&quot;,&quot;iPnOo9GWu4U?t=40&quot;,&quot;iPnOo9GWu4U?t=182&quot;,&quot;aHOEsHDFZCo?t=1020&quot;,&quot;rcqplwMywFY?t=300&quot;,&quot;aHOEsHDFZCo?t=205&quot;,&quot;aHOEsHDFZCo?t=2390&quot;,&quot;J0S-9KhEBRQ?t=0&quot;,&quot;2zTa2aRuKO0?t=0&quot;,&quot;jRNbQoqhYJc?t=0&quot;,&quot;9pk9kLc-_BM?t=0&quot;,&quot;XqHvKDStkNI?t=302&quot;,&quot;aHOEsHDFZCo?t=1490&quot;,&quot;ycgklzItcB4?t=0&quot;,&quot;iPnOo9GWu4U?t=135&quot;,&quot;XqHvKDStkNI?t=57&quot;,&quot;XqHvKDStkNI?t=251&quot;,&quot;mPyc37v8MW0?t=0&quot;,&quot;MFh8dfIdwrY?t=0&quot;,&quot;wFIEKbcV0CI?t=272&quot;,&quot;XqHvKDStkNI?t=632&quot;,&quot;XqHvKDStkNI?t=669&quot;,&quot;aHOEsHDFZCo?t=570&quot;,&quot;aHOEsHDFZCo?t=875&quot;,&quot;aHOEsHDFZCo?t=440&quot;,&quot;aHOEsHDFZCo?t=620&quot;,&quot;aHOEsHDFZCo?t=780&quot;,&quot;YgKqURZYpkE?t=0&quot;})]" Name="y10" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="l11">
        <Variable.Default>
          <VisualBasicValue x:TypeArguments="scg:List(x:String)" ExpressionText="new List(of String)({&quot;BusinessRuleException&quot;,&quot;ContinueOnError&quot;,&quot;Definition of a Business Exception&quot;,&quot;Definition of a Software Exception&quot;,&quot;Definition of an Application Exception&quot;,&quot;Exception Demo&quot;,&quot;Exception Handling&quot;,&quot;Exception handling overview&quot;,&quot;Exception Vs. Error&quot;,&quot;Forcing an Exception&quot;,&quot;How to Log Exception Messages to Excel&quot;,&quot;Rethrow&quot;,&quot;Retry Scope&quot;,&quot;System Demo of using Throw vs. Rethrow. There are two cascaded Try-Catch blocks.&quot;,&quot;The general to specific rule applies to exceptions.&quot;,&quot;The 5 most important Exceptions in UiPath: ArgumentException , NullReferenceException, IoException, InvalidOperationException and System.Exception&quot;,&quot;The Rethrow Activity throws the SAME exception (don't even have a chance to define a new exception in the properties panel)&quot;,&quot;The Throw Activity throws a new exception, eg. a business one. A new catch block should be defined for this new exception type.&quot;,&quot;Throw&quot;,&quot;Try Catch&quot;,&quot;Try Catch Use Case&quot;})" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;k4r64I7fjzI?t=900&quot;,&quot;WBki1AgKiCU?t=1972&quot;,&quot;GesX6RrmjQs?t=205&quot;,&quot;GesX6RrmjQs?t=43&quot;,&quot;GesX6RrmjQs?t=188&quot;,&quot;GesX6RrmjQs?t=249&quot;,&quot;WBki1AgKiCU?t=430&quot;,&quot;5QZ5dIB4dIs?t=42&quot;,&quot;WBki1AgKiCU?t=29&quot;,&quot;k4r64I7fjzI?t=527&quot;,&quot;qpD2TIgPk_U?t=0&quot;,&quot;WBki1AgKiCU?t=1867&quot;,&quot;WBki1AgKiCU?t=2075&quot;,&quot;5QZ5dIB4dIs?t=85&quot;,&quot;GesX6RrmjQs?t=114&quot;,&quot;GesX6RrmjQs?t=78&quot;,&quot;5QZ5dIB4dIs?t=290&quot;,&quot;5QZ5dIB4dIs?t=198&quot;,&quot;WBki1AgKiCU?t=1773&quot;,&quot;WBki1AgKiCU?t=474&quot;,&quot;k4r64I7fjzI?t=88&quot;})]" Name="y11" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Copy Folder | Copy Files from Directory&quot;,&quot;Create a file or folder with dates inside&quot;,&quot;Delete all the files except PNG files&quot;,&quot;Delete files&quot;,&quot;Delete files that are older than 2 weeks&quot;,&quot;Delete only PNG files&quot;,&quot;Download the file and Move the latest file to folders&quot;,&quot;Excel Application Scope use files&quot;,&quot;Get all Files from Directory and Subfolders&quot;,&quot;Get File Extension&quot;,&quot;Get Newest File from Directory&quot;,&quot;How to Copy a File with a Dynamic Name&quot;,&quot;How to open some or all files in a folder&quot;,&quot;How to split path&quot;,&quot;How to use a Config file in UiPath&quot;,&quot;How to use the files start the process&quot;,&quot;How to Write and Read a Text File&quot;,&quot;Move files&quot;,&quot;Move files to do Rename&quot;,&quot;Rename File&quot;,&quot;Rename files with VB commands&quot;,&quot;Run Batch File&quot;,&quot;Trigger a process when the file is added to a folder&quot;,&quot;UiPath delete files and folders&quot;,&quot;UiPath download files via VB.NET code&quot;,&quot;UiPath Studio upload files using VB.NET&quot;,&quot;Wait for Download Activity&quot;})]" Name="l12" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;l9tVqWScLvg?t=0&quot;,&quot;ufIgXK5G2xw?t=880&quot;,&quot;ufIgXK5G2xw?t=535&quot;,&quot;ufIgXK5G2xw?t=415&quot;,&quot;ufIgXK5G2xw?t=670&quot;,&quot;ufIgXK5G2xw?t=495&quot;,&quot;ufIgXK5G2xw?t=70&quot;,&quot;ufIgXK5G2xw?t=1230&quot;,&quot;QlA6E3LTSWo?t=0&quot;,&quot;VkSDCQ1qPv0?t=0&quot;,&quot;5a19IWCTIgg?t=0&quot;,&quot;PCxO1b1KkGo?t=0&quot;,&quot;Pr8ZBew6C0A?t=0&quot;,&quot;Fzwgb7sNVaw?t=0&quot;,&quot;dFLLVX50AKg?t=0&quot;,&quot;ufIgXK5G2xw?t=1125&quot;,&quot;b-6zTUijy7s?t=0&quot;,&quot;ufIgXK5G2xw?t=595&quot;,&quot;ufIgXK5G2xw?t=360&quot;,&quot;6r1ytD6hEEQ?t=0&quot;,&quot;ufIgXK5G2xw?t=270&quot;,&quot;dXp_8kUWgkQ?t=0&quot;,&quot;ufIgXK5G2xw?t=1020&quot;,&quot;DrU4WDOKojA?t=0&quot;,&quot;FX9oBEVhnrY?t=0&quot;,&quot;kpH5pIZk-N4?t=0&quot;,&quot;7Tc63IixDn0?t=0&quot;})]" Name="y12" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;How to add and update Tables in Confluence.&quot;,&quot;Add issue Wizard&quot;,&quot;Basic Authentication&quot;,&quot;Confluence - Add content with labels from UiPath Studio&quot;,&quot;Confluence - Get data with design and SQL wizard inside of UiPath Studio&quot;,&quot;Confluence - Upload and Download to/from Confluence&quot;,&quot;Delete Issue - RAW REST API&quot;,&quot;Download all attachments from Issue - RAW REST API&quot;,&quot;Download all the files from the issue&quot;,&quot;Execute JQL&quot;,&quot;Extract JQL from Jira and run this on Robot&quot;,&quot;Get data with design wizard inside of UiPath Studio&quot;,&quot;Get data with SQL commands inside of UiPath Studio&quot;,&quot;How to set internal comment on Jira issue&quot;,&quot;Insert and Update an Issue - RAW REST API&quot;,&quot;Jira on-premises REST api configuration&quot;,&quot;Jira REST API configuration&quot;,&quot;OAuth2&quot;,&quot;OAuth2 connection for Jira and Confluence (Configuration REST API)&quot;,&quot;UiPath update Jira Issue status via REST API&quot;,&quot;Uipath upload files in Jira (REST API) (HTTP REQUEST)&quot;})]" Name="l13" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;RoWsrzwSJGg?t=215&quot;,&quot;JJZpObvvyEo?t=120&quot;,&quot;YPdEiYINnXM?t=60&quot;,&quot;9ywBgq496tM?t=225&quot;,&quot;9ywBgq496tM?t=75&quot;,&quot;9ywBgq496tM?t=370&quot;,&quot;WpduLZZ-JAQ?t=37&quot;,&quot;WpduLZZ-JAQ?t=255&quot;,&quot;JJZpObvvyEo?t=370&quot;,&quot;YPdEiYINnXM?t=340&quot;,&quot;27upUkDgwdA?t=350&quot;,&quot;27upUkDgwdA?t=100&quot;,&quot;27upUkDgwdA?t=255&quot;,&quot;iUdwfyM4GYw?t=0&quot;,&quot;WpduLZZ-JAQ?t=70&quot;,&quot;zezUaLwM5h8?t=0&quot;,&quot;S9ZZlgU2_ew?t=170&quot;,&quot;YPdEiYINnXM?t=240&quot;,&quot;PawmhC6tYrw?t=0&quot;,&quot;bm3c86fzJk0?t=0&quot;,&quot;Ne3-5KFne7I?t=0&quot;})]" Name="y13" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;6 use-cases of using LINQ&quot;,&quot;ANY Function - LINQ&quot;,&quot;Full Outer Join&quot;,&quot;Inner Join&quot;,&quot;Lambda Expression&quot;,&quot;Left Outer Join&quot;,&quot;LINQ Array&quot;,&quot;LINQ Average Function&quot;,&quot;LINQ DataTables&quot;,&quot;LINQ Group&quot;,&quot;LINQ Join&quot;,&quot;LINQ Order&quot;,&quot;LINQ Sum Function&quot;,&quot;LINQ XML&quot;,&quot;Method Syntax&quot;,&quot;Mixed Syntax&quot;,&quot;Parts of LINQ Query&quot;,&quot;Query Syntax&quot;,&quot;Right Outer Join&quot;,&quot;SKIP Function - LINQ&quot;,&quot;TAKE Function - LINQ&quot;,&quot;What is LINQ / What is Query?&quot;,&quot;What is LINQ?&quot;,&quot;WHERE Function - LINQ&quot;})]" Name="l14" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;uibImumRGGM?t=0&quot;,&quot;ushKsJAXRT8?t=0&quot;,&quot;z3srG9JwR4A?t=1223&quot;,&quot;z3srG9JwR4A?t=138&quot;,&quot;TGjUUonqEJs?t=353&quot;,&quot;z3srG9JwR4A?t=580&quot;,&quot;2FlgUDtOoVc?t=293&quot;,&quot;erK_b6oaXz8?t=0&quot;,&quot;2FlgUDtOoVc?t=770&quot;,&quot;2FlgUDtOoVc?t=1488&quot;,&quot;2FlgUDtOoVc?t=2203&quot;,&quot;2FlgUDtOoVc?t=1838&quot;,&quot;_kOK6Q-VPVw?t=0&quot;,&quot;2FlgUDtOoVc?t=1030&quot;,&quot;TGjUUonqEJs?t=450&quot;,&quot;TGjUUonqEJs?t=696&quot;,&quot;2FlgUDtOoVc?t=80&quot;,&quot;TGjUUonqEJs?t=165&quot;,&quot;z3srG9JwR4A?t=978&quot;,&quot;RDQ9CrtumKU?t=0&quot;,&quot;PnaylK37gLE?t=0&quot;,&quot;TGjUUonqEJs?t=40&quot;,&quot;2FlgUDtOoVc?t=62&quot;,&quot;97bM7c_Z3c4?t=0&quot;})]" Name="y14" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Access data very fast from the dictionary&quot;,&quot;Add data to a dictionary&quot;,&quot;Add to Collections&quot;,&quot;Check if elements from the list are unique&quot;,&quot;Check if we have all the elements inside of a list&quot;,&quot;Check if we have at least one element inside of the list that matches&quot;,&quot;Check if we have multiple values in the same list&quot;,&quot;Compare List with Missing or Extra elements&quot;,&quot;Define dictionary&quot;,&quot;Dictionary&quot;,&quot;Install Dictionary activities&quot;,&quot;List (Collections)&quot;,&quot;Make Sum of the same element from a list&quot;,&quot;Sort List&quot;,&quot;Use Dictionary instead of multiple IFs&quot;})]" Name="l15" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;k01WX3g7lY0?t=1170&quot;,&quot;k01WX3g7lY0?t=835&quot;,&quot;k01WX3g7lY0?t=165&quot;,&quot;k01WX3g7lY0?t=1363&quot;,&quot;k01WX3g7lY0?t=310&quot;,&quot;k01WX3g7lY0?t=520&quot;,&quot;k01WX3g7lY0?t=1248&quot;,&quot;k01WX3g7lY0?t=1730&quot;,&quot;k01WX3g7lY0?t=768&quot;,&quot;k01WX3g7lY0?t=660&quot;,&quot;k01WX3g7lY0?t=690&quot;,&quot;k01WX3g7lY0?t=104&quot;,&quot;k01WX3g7lY0?t=1428&quot;,&quot;k01WX3g7lY0?t=210&quot;,&quot;k01WX3g7lY0?t=935&quot;})]" Name="y15" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Activating Modern Design Experience and Object Repository&quot;,&quot;Automation using a descriptors library&quot;,&quot;Breaking four working automations&quot;,&quot;Building selectors/descriptors&quot;,&quot;Capturing UI Elements&quot;,&quot;Defining anchors&quot;,&quot;Demo - Traditional selectors&quot;,&quot;Deploying the repaired descriptor&quot;,&quot;Enabling Modern Design Experience (correctly)&quot;,&quot;Exporting descriptors to a library&quot;,&quot;How to use a Library in UiPath&quot;,&quot;Problems with traditional selectors&quot;,&quot;Repairing a broken descriptor&quot;,&quot;Running four working automations&quot;,&quot;Some of the new activities&quot;,&quot;Trying out a few of the MDE activities&quot;,&quot;Using element descriptors in an automation&quot;,&quot;Using the Project Dependencies Mass Update Tool&quot;,&quot;What is Modern Design Experience&quot;})]" Name="l16" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Zs_cUJ2k_N4?t=236&quot;,&quot;AdgptyMfndo?t=70&quot;,&quot;AdgptyMfndo?t=175&quot;,&quot;pOIP4xBnMwk?t=150&quot;,&quot;Zs_cUJ2k_N4?t=300&quot;,&quot;Zs_cUJ2k_N4?t=425&quot;,&quot;Zs_cUJ2k_N4?t=155&quot;,&quot;AdgptyMfndo?t=311&quot;,&quot;pOIP4xBnMwk?t=85&quot;,&quot;Zs_cUJ2k_N4?t=566&quot;,&quot;4_aBDjc8agE?t=0&quot;,&quot;Zs_cUJ2k_N4?t=20&quot;,&quot;AdgptyMfndo?t=244&quot;,&quot;AdgptyMfndo?t=125&quot;,&quot;pOIP4xBnMwk?t=117&quot;,&quot;pOIP4xBnMwk?t=344&quot;,&quot;Zs_cUJ2k_N4?t=481&quot;,&quot;AdgptyMfndo?t=360&quot;,&quot;pOIP4xBnMwk?t=19&quot;})]" Name="y16" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Add items to the queue&quot;,&quot;Adding multiple items to a Queue using the Bulk Add Queue Items activity&quot;,&quot;Bulk Add Queue Item&quot;,&quot;Creating a queue in Orchestrator&quot;,&quot;Get data from the retrieved queue item&quot;,&quot;Get items from the queue&quot;,&quot;Multiple triggers ideas&quot;,&quot;Postman - Add data on the Queue&quot;,&quot;Postman - Get the authorization Key&quot;,&quot;Process details in UiPath Studio&quot;,&quot;Robot roles when working with queues&quot;,&quot;Set queue item transaction status&quot;,&quot;Setting the state of an item using the Set Transaction Status activity&quot;,&quot;Start a job from Queue Items&quot;,&quot;Start the process after 3 elements enter the Queue&quot;,&quot;Trigger on the Queue&quot;,&quot;Trigger the process on 3 items on the Queue&quot;,&quot;Using the Add Queue Item activity to add and item to a Queue&quot;,&quot;Using the Get Transaction Item activity to get an item for processing&quot;,&quot;What is a Queue?&quot;})]" Name="l17" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;JQrWl9xKixE?t=63&quot;,&quot;bs9Stm7pt_M?t=570&quot;,&quot;xQCfRaUrL_Q?t=0&quot;,&quot;bs9Stm7pt_M?t=177&quot;,&quot;JQrWl9xKixE?t=647&quot;,&quot;JQrWl9xKixE?t=405&quot;,&quot;aM_eU6DBAEY?t=570&quot;,&quot;aM_eU6DBAEY?t=130&quot;,&quot;aM_eU6DBAEY?t=75&quot;,&quot;aM_eU6DBAEY?t=315&quot;,&quot;bs9Stm7pt_M?t=62&quot;,&quot;JQrWl9xKixE?t=958&quot;,&quot;bs9Stm7pt_M?t=717&quot;,&quot;aM_eU6DBAEY?t=35&quot;,&quot;aM_eU6DBAEY?t=510&quot;,&quot;aM_eU6DBAEY?t=235&quot;,&quot;aM_eU6DBAEY?t=430&quot;,&quot;bs9Stm7pt_M?t=345&quot;,&quot;bs9Stm7pt_M?t=517&quot;,&quot;bs9Stm7pt_M?t=26&quot;})]" Name="y17" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="l18">
        <Variable.Default>
          <VisualBasicValue x:TypeArguments="scg:List(x:String)" ExpressionText="new List(of String)({&quot;Extract Images From PDF and Export PDF as Image&quot;,&quot;basic commands for extracting data from pdfs&quot;,&quot;Extract Table from complex PDF use-cases 3 unstructured data the logic will be based on IsUpper and IsLower&quot;,&quot;Extract Table from other PDF use-cases 2 delimiter is 2*spaces easy split&quot;,&quot;Extract table from PDF use-cases 1 replace some spaces with | (one column has multiple words)&quot;,&quot;Extract the price value from PDF&quot;,&quot;How to get data from invoice&quot;,&quot;Install PDF Activities&quot;,&quot;Join PDF and Manage PDF passwords&quot;,&quot;PDF Table Regex - add data row&quot;,&quot;PDF Table Regex - find matches&quot;,&quot;PDF Table Regex - iterate&quot;,&quot;PDF Table Regex - limitations&quot;,&quot;READ PDF text, Get PDF page count, Extract PDF&quot;,&quot;Read PDF with OCR&quot;,&quot;Split PDF File to Multiple Files&quot;,&quot;UiPath extract random data from PDF&quot;,&quot;Uipath Read PDF with OCR difference between systems&quot;})" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;HoatIPJfC3U?t=570&quot;,&quot;42qsNKoV1Ks?t=0&quot;,&quot;HoatIPJfC3U?t=1910&quot;,&quot;HoatIPJfC3U?t=1540&quot;,&quot;HoatIPJfC3U?t=720&quot;,&quot;HoatIPJfC3U?t=2425&quot;,&quot;c0rQUotxY3Q?t=0&quot;,&quot;HoatIPJfC3U?t=25&quot;,&quot;HoatIPJfC3U?t=415&quot;,&quot;zcAKBp-qFP8?t=513&quot;,&quot;zcAKBp-qFP8?t=390&quot;,&quot;zcAKBp-qFP8?t=417&quot;,&quot;zcAKBp-qFP8?t=703&quot;,&quot;HoatIPJfC3U?t=70&quot;,&quot;HoatIPJfC3U?t=340&quot;,&quot;CoRY4GwXKU4?t=0&quot;,&quot;rHb3i6GeRfI?t=0&quot;,&quot;sjXUe_T7-Ms?t=0&quot;})]" Name="y18" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Add Queue Items&quot;,&quot;An overview of the ReFramework&quot;,&quot;Assets (Config and Orchestrator)&quot;,&quot;Config&quot;,&quot;End Process&quot;,&quot;Get Transaction Data&quot;,&quot;How to create a log/report in UiPath REFramework&quot;,&quot;How to handle an exception in our Try Catch&quot;,&quot;Initialize All Applications&quot;,&quot;Kill All Processes&quot;,&quot;Process Transaction&quot;,&quot;Running our UiPath REFramework Example&quot;,&quot;The case of the tutorial&quot;,&quot;The initialization state&quot;,&quot;Transitions from Initialization&quot;,&quot;UiPath REFramework overview and introduction&quot;,&quot;Why use ReFramework?&quot;,&quot;Visual - Introduction into ReFramework&quot;,&quot;Visual - Initialization State&quot;,&quot;Visual - Get Transaction Data State&quot;,&quot;Visual - Process Transaction State&quot;,&quot;Visual - End Process State&quot;,&quot;Visual - Practical Example&quot;})]" Name="l19" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;LP5y51_n6BY?t=1538&quot;,&quot;wWo-UgBld18?t=190&quot;,&quot;LP5y51_n6BY?t=684&quot;,&quot;LP5y51_n6BY?t=389&quot;,&quot;LP5y51_n6BY?t=3112&quot;,&quot;LP5y51_n6BY?t=1972&quot;,&quot;LP5y51_n6BY?t=3172&quot;,&quot;LP5y51_n6BY?t=2656&quot;,&quot;LP5y51_n6BY?t=1401&quot;,&quot;LP5y51_n6BY?t=1072&quot;,&quot;LP5y51_n6BY?t=2415&quot;,&quot;LP5y51_n6BY?t=2994&quot;,&quot;LP5y51_n6BY?t=188&quot;,&quot;LP5y51_n6BY?t=243&quot;,&quot;LP5y51_n6BY?t=1915&quot;,&quot;LP5y51_n6BY?t=96&quot;,&quot;wWo-UgBld18?t=40&quot;,&quot;kjxxni-DhaU?t=0&quot;,&quot;aPakeaP7yfg?t=0&quot;,&quot;S3eTsiiyuRM?t=0&quot;,&quot;ldYESZdSze4?t=0&quot;,&quot;pEgWzav5VxE?t=0&quot;,&quot;W2K7pTYs4J4?t=0&quot;})]" Name="y19" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Bulk API - UiPath insert BIG DATA in Salesforce&quot;,&quot; Salesforce Deal registration - Add Contact&quot;,&quot; Salesforce Deal registration - Opportunity Items&quot;,&quot; Salesforce Deal registration - Opportunity parameters&quot;,&quot; Salesforce Deal registration - Product PriceBook&quot;,&quot; Salesforce Deal registration - Update Account&quot;,&quot;Add Account &quot;,&quot;Add Comment&quot;,&quot;Add Email&quot;,&quot;Add HTML Email&quot;,&quot;APEX activity with list of functions&quot;,&quot;Attach file to Case&quot;,&quot;Call APEX function&quot;,&quot;call report Salesforce&quot;,&quot;call Salesforce Report with filters ( APEX )&quot;,&quot;Configure Salesforce REST API Create TRUSTED IP&quot;,&quot;Configure Salesforce REST API for UiPath (Token and Consumer Key)&quot;,&quot;create a custom report from Salesforce | SOQL&quot;,&quot;Custom object&quot;,&quot;Data Loader for Salesforce&quot;,&quot;Dedicated activities for User&quot;,&quot;Download attachments from an email Case from Salesforce&quot;,&quot;Get data SOQL&quot;,&quot;How the REST API commands follow Salesforce Business rules&quot;,&quot;How to Mention Someone in Chat&quot;,&quot;Involve partner in an Opportunity from Salesforce&quot;,&quot;Move to Production&quot;,&quot;Print a report with more than 2000 rows from Salesforce&quot;,&quot;Salesforce anonymous APEX from UiPATH&quot;,&quot;Salesforce Automation  Use Case&quot;,&quot;Salesforce Automation Wizard | AI build workflow&quot;,&quot;Salesforce CPQ REST API commands&quot;,&quot;Salesforce Marketing Cloud - Add List / Campaign&quot;,&quot;Salesforce Marketing Cloud - Configuration&quot;,&quot;Salesforce Marketing Cloud - Get Data&quot;,&quot;Salesforce Marketing Cloud - Import Data&quot;,&quot;Salesforce Marketing Cloud - Send Email and SMS&quot;,&quot;Streamline Salesforce Quotation Process&quot;,&quot;Test vs. Production&quot;,&quot;UiPath download files from Salesforce&quot;,&quot;UiPath Get 100,000 items from Salesforce&quot;,&quot;Upload file to Salesforce and Assign this to an opportunity&quot;,&quot;Windows Credential&quot;})]" Name="l20" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;6Kem2eX09W4?t=0&quot;,&quot;5NGmzeO5SEk?t=1140&quot;,&quot;5NGmzeO5SEk?t=980&quot;,&quot;5NGmzeO5SEk?t=405&quot;,&quot;5NGmzeO5SEk?t=745&quot;,&quot;5NGmzeO5SEk?t=130&quot;,&quot;hucDUl4YOcU?t=165&quot;,&quot;tR8PhHchHtg?t=335&quot;,&quot;tR8PhHchHtg?t=110&quot;,&quot;tR8PhHchHtg?t=275&quot;,&quot;6ZtcQRp-kOw?t=90&quot;,&quot;tR8PhHchHtg?t=20&quot;,&quot;6ZtcQRp-kOw?t=50&quot;,&quot;4B_ee0jn8dM?t=0&quot;,&quot;2Ib4pNR4arQ?t=0&quot;,&quot;ygh1lMAgBWg?t=0&quot;,&quot;mz6eHTgr2Dw?t=0&quot;,&quot;VxTC0410PqU?t=0&quot;,&quot;hucDUl4YOcU?t=265&quot;,&quot;78fk6BkHNvQ?t=0&quot;,&quot;6ZtcQRp-kOw?t=165&quot;,&quot;TSQXmLPzYP8?t=0&quot;,&quot;hucDUl4YOcU?t=50&quot;,&quot;jbUquSZUCaA?t=235&quot;,&quot;IEsitjVAK_Q?t=205&quot;,&quot;2Y3j4efGjHw?t=0&quot;,&quot;jbUquSZUCaA?t=90&quot;,&quot;TQEfxzdPPT4?t=0&quot;,&quot;RoWsrzwSJGg?t=0&quot;,&quot;KhN5C6Tm9nk?t=0&quot;,&quot;0bQszSXSGHY?t=0&quot;,&quot;0QBdJt_kbhE?t=0&quot;,&quot;i37p4grCkrs?t=65&quot;,&quot;258FMEHjnto?t=0&quot;,&quot;i37p4grCkrs?t=285&quot;,&quot;i37p4grCkrs?t=230&quot;,&quot;i37p4grCkrs?t=205&quot;,&quot;HM7bCuwcLsU?t=0&quot;,&quot;jbUquSZUCaA?t=55&quot;,&quot;NM5cp5olG2w?t=0&quot;,&quot;ViAlKRUVB18?t=0&quot;,&quot;VQBD1jSGlS0?t=0&quot;,&quot;jbUquSZUCaA?t=130&quot;})]" Name="y20" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Application Settings&quot;,&quot;Change Opportunity Stage that will trigger the process&quot;,&quot;Consumer Key and Secret&quot;,&quot;Create a comment in Salesforce Case&quot;,&quot;Create a script for a process with parameters&quot;,&quot;Create a Trigger&quot;,&quot;Create Account&quot;,&quot;Create developer instance&quot;,&quot;Delete Account&quot;,&quot;download backup files from Salesforce&quot;,&quot;Download files from a case, opportunity, account, and other objects&quot;,&quot;Download multiple files from Salesforce&quot;,&quot;Execute Apex Code&quot;,&quot;Get Data&quot;,&quot;OAuth2&quot;,&quot;Quick action&quot;,&quot;Salesforce approvals via REST APIÂ &quot;,&quot;Salesforce automation via APEXREST&quot;,&quot;Salesforce call UiPath Assistant | RobotJS&quot;,&quot;Security Token&quot;,&quot;SendEmail via Quick action&quot;,&quot;Start UiPath process from Salesforce&quot;,&quot;UiPath upload file to Salesforce (REST API Base64)&quot;,&quot;Update Account&quot;})]" Name="l21" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;mz6eHTgr2Dw?t=170&quot;,&quot;NXAmpoIcAiI?t=280&quot;,&quot;mz6eHTgr2Dw?t=80&quot;,&quot;nBysXK_P12w?t=360&quot;,&quot;NXAmpoIcAiI?t=240&quot;,&quot;NXAmpoIcAiI?t=180&quot;,&quot;rJbR83pIy5E?t=170&quot;,&quot;FRIfbgbVzfs?t=0&quot;,&quot;rJbR83pIy5E?t=290&quot;,&quot;ENTlXik-BG8?t=0&quot;,&quot;YIadolCFSA0?t=250&quot;,&quot;3SZZixnVXME?t=0&quot;,&quot;NXAmpoIcAiI?t=130&quot;,&quot;rJbR83pIy5E?t=60&quot;,&quot;YIadolCFSA0?t=95&quot;,&quot;U_iwBaunSRk?t=190&quot;,&quot;sNnMOr9VztI?t=0&quot;,&quot;WtA0e7sbQF0?t=0&quot;,&quot;3F0S_dd56sg?t=0&quot;,&quot;mz6eHTgr2Dw?t=40&quot;,&quot;U_iwBaunSRk?t=335&quot;,&quot;NXAmpoIcAiI?t=0&quot;,&quot;ONpe-O2eMIM?t=0&quot;,&quot;rJbR83pIy5E?t=350&quot;})]" Name="y21" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Call Transaction / Program&quot;,&quot;Create purchase order&quot;,&quot;Create UiPath Studio project&quot;,&quot;Enable SAP GUI Scripting&quot;,&quot;Extract purchase order code&quot;,&quot;Fill SAP table&quot;,&quot;Fill the vendor&quot;,&quot;How to launch SAP with Start Process Activity&quot;,&quot;How to run the BAPI_GOODSMVT_CREATE&quot;,&quot;Iterate each Excel row&quot;,&quot;Read SAP tables in UiPath with RFC_READ_TABLE&quot;,&quot;SAP Accelerators - BAPI_REQUISITION_CREATE&quot;,&quot;SAP Accelerators - Unlock user | SAP S/4HANA | ITSM use-case&quot;,&quot;SAP BAPIs - The BapiRet2 Return message object&quot;,&quot;SAP GUI Scripting with VB.Net&quot;,&quot;SAP Login&quot;,&quot;SAP WinGUI Accelerators - Create Source List&quot;,&quot;Start SAP Logon&quot;,&quot;Write purchase order code into Excel&quot;})]" Name="l22" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Y6Bw4f67Lnk?t=755&quot;,&quot;Y6Bw4f67Lnk?t=2127&quot;,&quot;Y6Bw4f67Lnk?t=238&quot;,&quot;Y6Bw4f67Lnk?t=79&quot;,&quot;Y6Bw4f67Lnk?t=2238&quot;,&quot;Y6Bw4f67Lnk?t=1405&quot;,&quot;Y6Bw4f67Lnk?t=1154&quot;,&quot;xW3Jf_knjRE?t=0&quot;,&quot;ppbLYEmAJ8c?t=0&quot;,&quot;Y6Bw4f67Lnk?t=935&quot;,&quot;B4ENjua3eRs?t=0&quot;,&quot;YJ8mcy-Ci04?t=0&quot;,&quot;3zpORbfPThM?t=0&quot;,&quot;v2PsHTSQMYU?t=0&quot;,&quot;IfFrdLD7D18?t=0&quot;,&quot;Y6Bw4f67Lnk?t=562&quot;,&quot;wRp83QeixGQ?t=0&quot;,&quot;Y6Bw4f67Lnk?t=275&quot;,&quot;Y6Bw4f67Lnk?t=2497&quot;})]" Name="y22" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Add Caller and Group to or incident&quot;,&quot;Add file to incident&quot;,&quot;Add Incident&quot;,&quot;Call script to create a requested item&quot;,&quot;Configure the ServiceNow for OAuth and add Roles to the user.&quot;,&quot;Create a requested item with variables&quot;,&quot;Create a simple requested item&quot;,&quot;Custom object&quot;,&quot;Data Loader for ServiceNow&quot;,&quot;Dedicated JOIN activities that allow you to extract data&quot;,&quot;Download all the Attachments from an incident&quot;,&quot;Download file from the incident&quot;,&quot;Extract incidents that are assigned to Software or Hardware group&quot;,&quot;Fuzzy matching logic&quot;,&quot;Get all the incidents with a specific State and Assign Group, and save this to an Excel&quot;,&quot;Get the incident between a period&quot;,&quot;Get variables&quot;,&quot;How to define a Database View inside of the ServiceNow interface.&quot;,&quot;How to get your query from the interface.&quot;,&quot;How to use JOINs between the table and get a similar result like Database View from ServiceNow interface.&quot;,&quot;How to use LIKE in SQL&quot;,&quot;Insert multiple records&quot;,&quot;Read Comments from an incident&quot;,&quot;Read history of user in ServiceNow&quot;,&quot;Send data from UiPath to a script to create a requested item&quot;,&quot;Simple data extraction where incident description contains a value&quot;,&quot;SQL logic&quot;,&quot;UiPath call a script from ServiceNow&quot;,&quot;Update multiple incidents with data from Excel file&quot;,&quot;Update variables&quot;,&quot;Work with Catalogs&quot;})]" Name="l23" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;eUP64kmWPTg?t=150&quot;,&quot;eUP64kmWPTg?t=330&quot;,&quot;2PWXf2xY7Ls?t=110&quot;,&quot;jhBlUZmJ8Ws?t=420&quot;,&quot;8tXKxloeY3k?t=490&quot;,&quot;jhBlUZmJ8Ws?t=295&quot;,&quot;jhBlUZmJ8Ws?t=60&quot;,&quot;2PWXf2xY7Ls?t=185&quot;,&quot;kPSIkB7uu0E?t=0&quot;,&quot;BwIwsefJ7dY?t=25&quot;,&quot;8tXKxloeY3k?t=390&quot;,&quot;eUP64kmWPTg?t=420&quot;,&quot;tHbbQ-0HLuo?t=115&quot;,&quot;eUP64kmWPTg?t=240&quot;,&quot;8tXKxloeY3k?t=8&quot;,&quot;Vvsb8JmDkpI?t=250&quot;,&quot;5dxRdl6ajM8?t=265&quot;,&quot;BwIwsefJ7dY?t=345&quot;,&quot;lJEPbKEsllQ?t=305&quot;,&quot;tHbbQ-0HLuo?t=230&quot;,&quot;2kqyt892yLI?t=190&quot;,&quot;A9MuhCMmlFM?t=325&quot;,&quot;mkhTUsmGKnk?t=155&quot;,&quot;GiISULYQRyY?t=0&quot;,&quot;jhBlUZmJ8Ws?t=620&quot;,&quot;tHbbQ-0HLuo?t=35&quot;,&quot;2kqyt892yLI?t=40&quot;,&quot;A9MuhCMmlFM?t=0&quot;,&quot;8tXKxloeY3k?t=300&quot;,&quot;5dxRdl6ajM8?t=340&quot;,&quot;2PWXf2xY7Ls?t=225&quot;})]" Name="y23" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Add roles to your user from ServiceNow&quot;,&quot;Configure Oauth in ServiceNow&quot;,&quot;Create Developer Account&quot;,&quot;Delete incident&quot;,&quot;Download files from an incident&quot;,&quot;Get incidents&quot;,&quot;Insert incident&quot;,&quot;OAuth2&quot;,&quot;Service Catalog API for ServiceNow&quot;,&quot;ServiceNow trigger UiPath Robots (REST API Scripts)&quot;,&quot;Start UiPath process from ServiceNow&quot;,&quot;UiPath Orchestrator automatically create an incident in ServiceNow via WebHooks&quot;,&quot;UiPath Orchestrator Webhooks create an Incident in ServiceNow&quot;,&quot;Update incident&quot;,&quot;Upload file to an incident&quot;})]" Name="l24" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Hpl6U3ZynbM?t=135&quot;,&quot;Hpl6U3ZynbM?t=80&quot;,&quot;VZM7cA7Wyms?t=14&quot;,&quot;9UWKxFQZsUQ?t=355&quot;,&quot;6j3oe5U6H88?t=180&quot;,&quot;9UWKxFQZsUQ?t=70&quot;,&quot;9UWKxFQZsUQ?t=440&quot;,&quot;6j3oe5U6H88?t=48&quot;,&quot;4EBEkBcoauw?t=0&quot;,&quot;zyA_eWgeOqs?t=0&quot;,&quot;GYqaWoT7Xxk?t=0&quot;,&quot;DTFOu01IVcw?t=0&quot;,&quot;PxW9E_dAUq0?t=0&quot;,&quot;9UWKxFQZsUQ?t=540&quot;,&quot;6j3oe5U6H88?t=368&quot;})]" Name="y24" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;AddDays get DayofWeek&quot;,&quot;Compare DateTime&quot;,&quot;Compare strings in multiple ways&quot;,&quot;Convert from String to DateTime&quot;,&quot;DateTime to string in multiple ways&quot;,&quot;Examples for Substring functions&quot;,&quot;How to select dates from a Date Picker with UiPath&quot;,&quot;IndexOf and LastIndexOf&quot;,&quot;Lower Case and Upper Case&quot;,&quot;Modify Dates activity - Tutorial&quot;,&quot;Remove Special Characters from String&quot;,&quot;Resume of all the String function part&quot;,&quot;Split string by character&quot;,&quot;Split string by string&quot;,&quot;SubString working together IndexOf and LastIndexOf&quot;,&quot;Swap two characters or words in a string&quot;,&quot;Trim&quot;,&quot;UiPath Studio compare strings using Levenshtein Distance Algorithm&quot;})]" Name="l25" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;yfQ8ucw8Ykk?t=1380&quot;,&quot;yfQ8ucw8Ykk?t=1580&quot;,&quot;yfQ8ucw8Ykk?t=905&quot;,&quot;yfQ8ucw8Ykk?t=1540&quot;,&quot;yfQ8ucw8Ykk?t=1205&quot;,&quot;yfQ8ucw8Ykk?t=35&quot;,&quot;G5s2YZZd49E?t=0&quot;,&quot;yfQ8ucw8Ykk?t=250&quot;,&quot;yfQ8ucw8Ykk?t=720&quot;,&quot;BA7MYQx3cCo?t=0&quot;,&quot;LsfpCHsR93E?t=0&quot;,&quot;yfQ8ucw8Ykk?t=1145&quot;,&quot;yfQ8ucw8Ykk?t=405&quot;,&quot;yfQ8ucw8Ykk?t=530&quot;,&quot;yfQ8ucw8Ykk?t=300&quot;,&quot;oxRseMiGz48?t=0&quot;,&quot;yfQ8ucw8Ykk?t=765&quot;,&quot;jfVd0O_eLF4?t=0&quot;})]" Name="y25" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Advantages of Dispatcher-Performer-Model&quot;,&quot;ATM Process Diagram&quot;,&quot;ATM Process Example&quot;,&quot;Create Process using ReFramework Template&quot;,&quot;Dispatcher in ReFramework&quot;,&quot;Dispatcher-Performer-Model&quot;,&quot;Iterative Process&quot;,&quot;Linear Process&quot;,&quot;Performer in ReFramework&quot;,&quot;Producer-Consumer-Model&quot;,&quot;ReFramework States&quot;,&quot;State Transition&quot;,&quot;State Machine - Advantages&quot;,&quot;State Machine - Disadvantages&quot;,&quot;State Machine - Execution Order&quot;,&quot;State Machine - Transition Parts&quot;,&quot;State Machine vs. Sequence vs. Flowchart&quot;,&quot;Transactional Process&quot;,&quot;What is Business Process&quot;,&quot;What is ReFramework&quot;,&quot;What is State Machine?&quot;})]" Name="l26" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;ZGtec1MrLD4?t=293&quot;,&quot;M1AJs44P1bA?t=136&quot;,&quot;M1AJs44P1bA?t=58&quot;,&quot;kjxxni-DhaU?t=445&quot;,&quot;ZGtec1MrLD4?t=415&quot;,&quot;ZGtec1MrLD4?t=115&quot;,&quot;kjxxni-DhaU?t=191&quot;,&quot;kjxxni-DhaU?t=131&quot;,&quot;ZGtec1MrLD4?t=505&quot;,&quot;ZGtec1MrLD4?t=22&quot;,&quot;ZGtec1MrLD4?t=325&quot;,&quot;M1AJs44P1bA?t=298&quot;,&quot;M1AJs44P1bA?t=739&quot;,&quot;M1AJs44P1bA?t=829&quot;,&quot;M1AJs44P1bA?t=652&quot;,&quot;M1AJs44P1bA?t=516&quot;,&quot;M1AJs44P1bA?t=867&quot;,&quot;kjxxni-DhaU?t=267&quot;,&quot;kjxxni-DhaU?t=62&quot;,&quot;kjxxni-DhaU?t=47&quot;,&quot;M1AJs44P1bA?t=245&quot;})]" Name="y26" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Adding a Table control to our page&quot;,&quot;Adding controls to a Page&quot;,&quot;Adding processes to our App project&quot;,&quot;Adding rules to Button controls&quot;,&quot;Binding data to our individual Page controls&quot;,&quot;Binding data to our Table control&quot;,&quot;Building my First UiPath App&quot;,&quot;Creating a rule to start a process&quot;,&quot;Creating the Customer data page layout in App Studio&quot;,&quot;Creating the Orders data page layout in App Studio&quot;,&quot;Getting started building an App&quot;,&quot;Linking to the backend process&quot;,&quot;Page Properties&quot;,&quot;Publishing our package to Orchestrator&quot;,&quot;Refreshing the process data connection in App Studio&quot;,&quot;Setting Button control properties&quot;,&quot;The 8 Rules available for Events&quot;,&quot;The Button control&quot;,&quot;The Header control&quot;,&quot;The Textbox control&quot;,&quot;The three types of Containers&quot;,&quot;UiPath Apps UX Design for Beginners&quot;,&quot;Using a Container control&quot;,&quot;Using a Container Layout control&quot;,&quot;Using a Page Container control with multiple pages&quot;,&quot;What are UiPath Apps?&quot;})]" Name="l27" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;r4bfnXWRP08?t=990&quot;,&quot;9jS8M3HnWbE?t=248&quot;,&quot;r4bfnXWRP08?t=585&quot;,&quot;9jS8M3HnWbE?t=667&quot;,&quot;r4bfnXWRP08?t=750&quot;,&quot;r4bfnXWRP08?t=1025&quot;,&quot;575jV_iP11k?t=0&quot;,&quot;r4bfnXWRP08?t=665&quot;,&quot;r4bfnXWRP08?t=259&quot;,&quot;r4bfnXWRP08?t=938&quot;,&quot;9jS8M3HnWbE?t=147&quot;,&quot;vqdK5FUmH_Q?t=143&quot;,&quot;9jS8M3HnWbE?t=188&quot;,&quot;r4bfnXWRP08?t=134&quot;,&quot;r4bfnXWRP08?t=1073&quot;,&quot;9jS8M3HnWbE?t=540&quot;,&quot;vqdK5FUmH_Q?t=613&quot;,&quot;vqdK5FUmH_Q?t=587&quot;,&quot;vqdK5FUmH_Q?t=397&quot;,&quot;vqdK5FUmH_Q?t=527&quot;,&quot;vqdK5FUmH_Q?t=299&quot;,&quot;bFWOZo_FLbk?t=0&quot;,&quot;9jS8M3HnWbE?t=302&quot;,&quot;9jS8M3HnWbE?t=373&quot;,&quot;9jS8M3HnWbE?t=614&quot;,&quot;9jS8M3HnWbE?t=42&quot;})]" Name="y27" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Adding a few processes&quot;,&quot;Adding Reminders&quot;,&quot;Adding the robot to a new Environment&quot;,&quot;Advanced User Events&quot;,&quot;Connecting the Assistant to Orchestrator&quot;,&quot;Creating a Machine (key)&quot;,&quot;Creating a Standard Robot&quot;,&quot;Oracle APEX call UiPath Process&quot;,&quot;Other Assistant preferences&quot;,&quot;Preparations in Orchestrator&quot;,&quot;Process Detail settings&quot;,&quot;Searching processes&quot;,&quot;Start UiPath Robots from the JavaScript (RobotJS)&quot;,&quot;Starting UiPath Assistant&quot;,&quot;The Launch Pad&quot;,&quot;User Events&quot;})]" Name="l28" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;k82_e8t-BOQ?t=230&quot;,&quot;k82_e8t-BOQ?t=345&quot;,&quot;k82_e8t-BOQ?t=140&quot;,&quot;qliwlvvmBDo?t=279&quot;,&quot;k82_e8t-BOQ?t=176&quot;,&quot;k82_e8t-BOQ?t=67&quot;,&quot;k82_e8t-BOQ?t=100&quot;,&quot;6Iwp28qF6OU?t=0&quot;,&quot;k82_e8t-BOQ?t=374&quot;,&quot;k82_e8t-BOQ?t=47&quot;,&quot;k82_e8t-BOQ?t=449&quot;,&quot;k82_e8t-BOQ?t=325&quot;,&quot;_xoOlvlo9ng?t=0&quot;,&quot;k82_e8t-BOQ?t=23&quot;,&quot;k82_e8t-BOQ?t=290&quot;,&quot;qliwlvvmBDo?t=26&quot;})]" Name="y28" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Add machine template on UiPath Orchestrator&quot;,&quot;Build simple web automation&quot;,&quot;Deploy to UiPath Orchestrator&quot;,&quot;Install Docker&quot;,&quot;Install WSL kernel update&quot;,&quot;Pulling Linux Robot to Docker&quot;,&quot;Run Docker image&quot;})]" Name="l29" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;UNtHMITbLh8?t=290&quot;,&quot;UNtHMITbLh8?t=597&quot;,&quot;UNtHMITbLh8?t=672&quot;,&quot;UNtHMITbLh8?t=60&quot;,&quot;UNtHMITbLh8?t=141&quot;,&quot;UNtHMITbLh8?t=220&quot;,&quot;UNtHMITbLh8?t=459&quot;})]" Name="y29" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Adding a process and selecting Entry Point&quot;,&quot;Adding an Intelligent Keyword Classifier&quot;,&quot;Adding an Intelligent Keyword Classifier Trainer&quot;,&quot;Adding more Entry Points&quot;,&quot;Adjusting the Confidence Score threshold&quot;,&quot;Advanced Scheduling&quot;,&quot;Assets&quot;,&quot;Business Process&quot;,&quot;Connect UiPath Studio with Orchestrator&quot;,&quot;Create Trigger&quot;,&quot;Definition of an Asset in UiPath Orchestrator&quot;,&quot;Demo of Assets in Studio and Orchestrator: retrieve values with Get Asset or Get Credential activities; set values with Set Asset and Set Credential activities.&quot;,&quot;Environment&quot;,&quot;Get Transaction Item&quot;,&quot;Google GO call UiPath Process&quot;,&quot;How and why to use Process Arguments in UiPath Orchestrator&quot;,&quot;How To TRIGGER UiPath Robot From GOOGLE DRIVE Drive File Upload&quot;,&quot;Initial training of the Intelligent Keyword Classifier&quot;,&quot;Jobs&quot;,&quot;Learn how to use Storage Buckets&quot;,&quot;Logs&quot;,&quot;Machine&quot;,&quot;NodeJS code start UiPath Process&quot;,&quot;Non Working Days Calendar&quot;,&quot;Orchestrator Lifecycle&quot;,&quot;Orchestrator Word&quot;,&quot;Package&quot;,&quot;Postman - Check the Process Status on Loop&quot;,&quot;Postman - Get Authorization Token&quot;,&quot;Postman - Get the Release Key&quot;,&quot;Postman - Output Arguments&quot;,&quot;Postman - Start the Process&quot;,&quot;Postman read process result from UiPath Orchestrator Overview&quot;,&quot;Power Automate call UiPath Process&quot;,&quot;Process&quot;,&quot;Queue&quot;,&quot;Queue Item Lifecycle&quot;,&quot;Re-training the Classifier&quot;,&quot;Robot&quot;,&quot;Start UiPath from Groovy&quot;,&quot;start uipath process from netsuite&quot;,&quot;start uipath process from postman (orchestrator rest api)&quot;,&quot;start uipath process from postman on premise (orchestrator api)&quot;,&quot;start uipath robot from php | php call uipath orchestrator&quot;,&quot;Summary&quot;,&quot;Tenant Folders&quot;,&quot;The Global Value Switch of an Asset&quot;,&quot;Trigger basics&quot;,&quot;Trigger Types&quot;,&quot;Triggers&quot;,&quot;uipath orchestrator webhooks use-case&quot;,&quot;Using a CRON expression generator&quot;,&quot;Using an Entry Point in Orchestrator&quot;,&quot;Using Classification Station&quot;,&quot;Using the Advanced/Cron option&quot;,&quot;When should we use Assets, and what are the alternatives ? When should I use a config file instead ?&quot;})]" Name="l30" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Yyw-LmCIJNY?t=180&quot;,&quot;UiZXSAOa7EQ?t=120&quot;,&quot;UiZXSAOa7EQ?t=335&quot;,&quot;Yyw-LmCIJNY?t=215&quot;,&quot;UiZXSAOa7EQ?t=408&quot;,&quot;0dWcUzGpA5o?t=87&quot;,&quot;419i33PeY14?t=1572&quot;,&quot;419i33PeY14?t=93&quot;,&quot;419i33PeY14?t=530&quot;,&quot;JKLQOom3vOM?t=127&quot;,&quot;eeo-0EJonaQ?t=37&quot;,&quot;eeo-0EJonaQ?t=256&quot;,&quot;419i33PeY14?t=807&quot;,&quot;419i33PeY14?t=1227&quot;,&quot;4wbNwODCHl8?t=0&quot;,&quot;VxdkOJCrCnk?t=0&quot;,&quot;Nfs5X22pqXc?t=0&quot;,&quot;UiZXSAOa7EQ?t=200&quot;,&quot;419i33PeY14?t=1449&quot;,&quot;anZjItxdSDw?t=0&quot;,&quot;419i33PeY14?t=1524&quot;,&quot;419i33PeY14?t=410&quot;,&quot;pgXlRiTh21M?t=0&quot;,&quot;0dWcUzGpA5o?t=107&quot;,&quot;419i33PeY14?t=1823&quot;,&quot;419i33PeY14?t=48&quot;,&quot;419i33PeY14?t=203&quot;,&quot;WWBwxstGtgM?t=475&quot;,&quot;WWBwxstGtgM?t=215&quot;,&quot;WWBwxstGtgM?t=330&quot;,&quot;WWBwxstGtgM?t=620&quot;,&quot;WWBwxstGtgM?t=410&quot;,&quot;WWBwxstGtgM?t=65&quot;,&quot;EE3iexABHls?t=0&quot;,&quot;419i33PeY14?t=318&quot;,&quot;419i33PeY14?t=864&quot;,&quot;419i33PeY14?t=1020&quot;,&quot;UiZXSAOa7EQ?t=535&quot;,&quot;419i33PeY14?t=563&quot;,&quot;HdxY_KprBSM?t=0&quot;,&quot;PNzPGGzdMnA?t=0&quot;,&quot;84Wlzn1CK_Y?t=0&quot;,&quot;SqRZlUUDe3k?t=0&quot;,&quot;T7CU8Tqsm-8?t=0&quot;,&quot;419i33PeY14?t=1743&quot;,&quot;419i33PeY14?t=1669&quot;,&quot;eeo-0EJonaQ?t=146&quot;,&quot;0dWcUzGpA5o?t=13&quot;,&quot;JKLQOom3vOM?t=30&quot;,&quot;419i33PeY14?t=1305&quot;,&quot;rUl5CXBQTkI?t=0&quot;,&quot;0dWcUzGpA5o?t=245&quot;,&quot;Yyw-LmCIJNY?t=147&quot;,&quot;UiZXSAOa7EQ?t=440&quot;,&quot;0dWcUzGpA5o?t=205&quot;,&quot;eeo-0EJonaQ?t=513&quot;})]" Name="y30" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Activities&quot;,&quot;Add Log Message&quot;,&quot;Browser Automation&quot;,&quot;Click Activity&quot;,&quot;Create new project&quot;,&quot;Download email attachments&quot;,&quot;Dropdown&quot;,&quot;Execute the automation&quot;,&quot;Export project to UiPath Studio&quot;,&quot;Extract Text&quot;,&quot;For each Outlook email&quot;,&quot;How To Open Browser and Login (RPA Tutorial)&quot;,&quot;Publish automation to Orchestrator&quot;,&quot;Reply to Email&quot;,&quot;Run Automation&quot;,&quot;Send an Email&quot;,&quot;Switch to edit mode&quot;,&quot;Take Screenshot Activity&quot;,&quot;Upload attachments to Google Drive&quot;})]" Name="l31" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;1RGYRatepSY?t=146&quot;,&quot;bHY9QFLO86I?t=974&quot;,&quot;bHY9QFLO86I?t=123&quot;,&quot;bHY9QFLO86I?t=483&quot;,&quot;1RGYRatepSY?t=94&quot;,&quot;1RGYRatepSY?t=370&quot;,&quot;bHY9QFLO86I?t=353&quot;,&quot;1RGYRatepSY?t=576&quot;,&quot;1RGYRatepSY?t=693&quot;,&quot;bHY9QFLO86I?t=904&quot;,&quot;1RGYRatepSY?t=271&quot;,&quot;pYdnE6dc_Bk?t=0&quot;,&quot;1RGYRatepSY?t=766&quot;,&quot;yzErSuccsmo?t=284&quot;,&quot;bHY9QFLO86I?t=729&quot;,&quot;yzErSuccsmo?t=419&quot;,&quot;1RGYRatepSY?t=599&quot;,&quot;bHY9QFLO86I?t=510&quot;,&quot;1RGYRatepSY?t=527&quot;})]" Name="y31" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;become a citizen rpa developer&quot;,&quot;create nupkg file | manually upload project to orchestrator&quot;,&quot;decisions and iterations | if vs switch | for each | skip&quot;,&quot;digital assistant | work with excel, word and outlook&quot;,&quot;excel - sales report | pivot table | vlookup&quot;,&quot;excel automation&quot;,&quot;excel reconciliation | expense report | vlookup&quot;,&quot;files and folder automation | iterate, rename and move files&quot;,&quot;gmail automation&quot;,&quot;how to connect with gmail account | oauth authentication | client id and secret&quot;,&quot;How to Create Decision logic with the If activity in UiPath Studio X&quot;,&quot;How to Extract part of a Text (String) in UiPath Studio X&quot;,&quot;how to install and enable browser extension&quot;,&quot;How to Loop through emails and read mail in UiPath Studio X&quot;,&quot;How to Loop through files in UiPath Studio X&quot;,&quot;outlook automation | filter mails| save | delete&quot;,&quot;ppt automation&quot;,&quot;table extraction from web page | ui automation&quot;,&quot;word automation | create resumes&quot;,&quot;work with excel&quot;})]" Name="l32" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;C1gWGaumBJA?t=0&quot;,&quot;wqL71K5031I?t=0&quot;,&quot;2noowi9j3LA?t=0&quot;,&quot;XUWbNz3b7_U?t=0&quot;,&quot;Im3a5D3Jw_g?t=0&quot;,&quot;q_Rj7Ox23jo?t=0&quot;,&quot;QKq_xdxACCU?t=0&quot;,&quot;bXKbV1HUlm4?t=0&quot;,&quot;YtC0s0GnNrA?t=0&quot;,&quot;hAvc_6zPtiw?t=0&quot;,&quot;QDaOPXktk58?t=0&quot;,&quot;NCx84-6Cnug?t=0&quot;,&quot;QE3dFUlTb-A?t=0&quot;,&quot;_saPQu6ZaVE?t=0&quot;,&quot;CRbJiAyVLg4?t=0&quot;,&quot;bVqS-8Dp_ZA?t=0&quot;,&quot;YBlpiONitnA?t=0&quot;,&quot;JzhKh3nAduQ?t=0&quot;,&quot;D9pqt4UtF_s?t=0&quot;,&quot;TIjPOOtBq9g?t=0&quot;})]" Name="y32" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Assign Robot Machine to Folder&quot;,&quot;Configure Robot Account&quot;,&quot;Connect Robot with Orchestrator&quot;,&quot;Create Asset&quot;,&quot;Create Machine Template&quot;,&quot;Create Process in Orchestrator&quot;,&quot;Create Project Publish&quot;,&quot;Create Queue&quot;,&quot;Create Robot Account&quot;,&quot;Create Tenant&quot;,&quot;Create Trigger&quot;,&quot;Install UiPath Studio Community Edition&quot;,&quot;Login UiPath Cloud Platform&quot;})]" Name="l33" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;ds2I-rw-w8I?t=411&quot;,&quot;ds2I-rw-w8I?t=309&quot;,&quot;ds2I-rw-w8I?t=470&quot;,&quot;ds2I-rw-w8I?t=1128&quot;,&quot;ds2I-rw-w8I?t=198&quot;,&quot;ds2I-rw-w8I?t=682&quot;,&quot;ds2I-rw-w8I?t=549&quot;,&quot;ds2I-rw-w8I?t=1069&quot;,&quot;ds2I-rw-w8I?t=113&quot;,&quot;ds2I-rw-w8I?t=61&quot;,&quot;ds2I-rw-w8I?t=751&quot;,&quot;ds2I-rw-w8I?t=145&quot;,&quot;ds2I-rw-w8I?t=20&quot;})]" Name="y33" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Add Pictures&quot;,&quot;Create a complex PowerPoint from 0&quot;,&quot;PPT -  Add a new slide and add a picture&quot;,&quot;PPT - Add a text with shadow&quot;,&quot;PPT - Add Chart&quot;,&quot;PPT - Delete slide and Export to PDF&quot;,&quot;PPT - Install NuGet Package for automation&quot;,&quot;PPT - Perform a slideshow&quot;,&quot;PPT - Working with comments (Add, Read, Delete)&quot;,&quot;Replace Words in Text Document&quot;,&quot;Save Document&quot;,&quot;Set Bookmark Content&quot;,&quot;Word Application Scope READ, REPLACE, APPEND&quot;,&quot;WordDocument Activities only files READ, REPLACE, APPEND&quot;})]" Name="l34" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;rkdwP1G6Zmo?t=330&quot;,&quot;u9yeLEBPVQc?t=1190&quot;,&quot;u9yeLEBPVQc?t=240&quot;,&quot;u9yeLEBPVQc?t=635&quot;,&quot;u9yeLEBPVQc?t=500&quot;,&quot;u9yeLEBPVQc?t=900&quot;,&quot;u9yeLEBPVQc?t=70&quot;,&quot;u9yeLEBPVQc?t=750&quot;,&quot;u9yeLEBPVQc?t=1050&quot;,&quot;bHakJt6NFzo?t=0&quot;,&quot;rkdwP1G6Zmo?t=240&quot;,&quot;rkdwP1G6Zmo?t=485&quot;,&quot;rkdwP1G6Zmo?t=190&quot;,&quot;rkdwP1G6Zmo?t=90&quot;})]" Name="y34" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;Create a complex XML&quot;,&quot;Deserialize XML&quot;,&quot;Element Naming Style&quot;,&quot;How to extract Data from XML Attributes&quot;,&quot;How to extract Data from XML Nodes&quot;,&quot;How we build a simple XML&quot;,&quot;Main element creation that also includes attributes&quot;,&quot;Parts of XML Element&quot;,&quot;RAW approach to SOAP API command&quot;,&quot;SOAP Request activity&quot;,&quot;Step by Step XML creation&quot;,&quot;XAttribute&quot;,&quot;XDocument&quot;,&quot;XElement&quot;,&quot;XML Comment&quot;,&quot;XML Parser&quot;,&quot;XML Structure&quot;,&quot;XML Vs. HTML&quot;})]" Name="l35" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)({&quot;3nUtbExwP6k?t=920&quot;,&quot;3nUtbExwP6k?t=1430&quot;,&quot;t6DZsXQldzI?t=263&quot;,&quot;3nUtbExwP6k?t=1660&quot;,&quot;3nUtbExwP6k?t=1515&quot;,&quot;3nUtbExwP6k?t=810&quot;,&quot;3nUtbExwP6k?t=1210&quot;,&quot;t6DZsXQldzI?t=170&quot;,&quot;3nUtbExwP6k?t=670&quot;,&quot;3nUtbExwP6k?t=450&quot;,&quot;3nUtbExwP6k?t=990&quot;,&quot;e7DZHR2gCKE?t=845&quot;,&quot;e7DZHR2gCKE?t=77&quot;,&quot;e7DZHR2gCKE?t=449&quot;,&quot;t6DZsXQldzI?t=299&quot;,&quot;t6DZsXQldzI?t=310&quot;,&quot;t6DZsXQldzI?t=142&quot;,&quot;t6DZsXQldzI?t=73&quot;})]" Name="y35" />
      <Variable x:TypeArguments="x:String" Name="res1" />
      <Variable x:TypeArguments="x:String" Name="res2" />
      <Variable x:TypeArguments="x:Int32" Name="idx" />
      <Variable x:TypeArguments="x:Int32" Name="idx1" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <uasc:AppendItemToCollection x:TypeArguments="scg:List(x:String)" Collection="[ListOfList]" DisplayName="Append item to collection" sap:VirtualizedContainerService.HintSize="708.4,185.6" sap2010:WorkflowViewState.IdRef="AppendItemToCollection`1_4" Result="[ListOfList]">
      <uasc:AppendItemToCollection.Items>
        <scg:List x:TypeArguments="InArgument(scg:List(x:String))" Capacity="64">
          <InArgument x:TypeArguments="scg:List(x:String)">[l1]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l2]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l3]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l4]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l5]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l6]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l7]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l8]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l9]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l10]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l11]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l12]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l13]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l14]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l15]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l16]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l17]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l18]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l19]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l20]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l21]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l22]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l23]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l24]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l25]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l26]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l27]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l28]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l29]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l30]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l31]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l32]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l33]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l34]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[l35]</InArgument>
        </scg:List>
      </uasc:AppendItemToCollection.Items>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </uasc:AppendItemToCollection>
    <uasc:AppendItemToCollection x:TypeArguments="scg:List(x:String)" Collection="[ListOfYou]" DisplayName="Append item to collection" sap:VirtualizedContainerService.HintSize="708.4,185.6" sap2010:WorkflowViewState.IdRef="AppendItemToCollection`1_5" Result="[ListOfYou]">
      <uasc:AppendItemToCollection.Items>
        <scg:List x:TypeArguments="InArgument(scg:List(x:String))" Capacity="64">
          <InArgument x:TypeArguments="scg:List(x:String)">[y1]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y2]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y3]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y4]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y5]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y6]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y7]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y8]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y9]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y10]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y11]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y12]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y13]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y14]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y15]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y16]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y17]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y18]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y19]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y20]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y21]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y22]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y23]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y24]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y25]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y26]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y27]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y28]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y29]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y30]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y31]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y32]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y33]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y34]</InArgument>
          <InArgument x:TypeArguments="scg:List(x:String)">[y35]</InArgument>
        </scg:List>
      </uasc:AppendItemToCollection.Items>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </uasc:AppendItemToCollection>
    <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="708.4,308" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="Please select a category" OptionsString="[String.Join(&quot;;&quot;, listC.ToArray())]" Title="Select your area of intrest">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[res1]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[idx]" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="708.4,32" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[listC]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="Item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="543.6,666.4" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[Item.Equals(res1)]" sap:VirtualizedContainerService.HintSize="481.6,544.4" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="400,263.6" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,69.6" sap2010:WorkflowViewState.IdRef="Assign_1">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[idx1]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[idx]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:Break sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Break_1" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="400,114.4" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="708.4,308" sap2010:WorkflowViewState.IdRef="InputDialog_3" IsPassword="False" Label="Please select exactly you question" OptionsString="[String.Join(&quot;;&quot;, ListOfList(idx1).ToArray())]" Title="[&quot;Select your area from &quot;+res1]">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[res2]</OutArgument>
      </ui:InputDialog.Result>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InputDialog>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="[idx]" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="708.4,876" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[ListOfList(idx1)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="Item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="672.8,741.2" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[Item.Equals(res2)]" sap:VirtualizedContainerService.HintSize="610.8,619.2" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="529.2,338.4" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:OpenBrowser AutomaticallyDownloadWebDriver="{x:Null}" CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Open Browser" sap:VirtualizedContainerService.HintSize="467.2,144.4" sap2010:WorkflowViewState.IdRef="OpenBrowser_1" Url="[&quot;https://youtu.be/&quot;+ListOfYou(idx1)(idx)]">
                    <ui:OpenBrowser.Body>
                      <ActivityAction x:TypeArguments="x:Object">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                        </ActivityAction.Argument>
                        <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="200,32" sap2010:WorkflowViewState.IdRef="MaximizeWindow_1" />
                      </ActivityAction>
                    </ui:OpenBrowser.Body>
                  </ui:OpenBrowser>
                  <ui:Break sap:VirtualizedContainerService.HintSize="467.2,32" sap2010:WorkflowViewState.IdRef="Break_2" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="400,114.4" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>